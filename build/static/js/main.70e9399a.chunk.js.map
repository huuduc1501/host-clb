{"version":3,"sources":["reducer/auth.js","components/auth/Signin.js","components/auth/Signup.js","components/auth/Auth.js","context/Socket.js","hooks/useSocket.js","reducer/chat.js","components/chat/InputtingMessage.js","components/chat/Message.js","reducer/call.js","components/emoji/EmojiPicker.js","components/chat/Chat.js","reducer/conversation.js","components/sidebar/Conversation.js","components/sidebar/Sidebar.js","components/call/CallModal3.js","components/call/Call.js","pages/Home.js","reducer/user.js","App.js","reportWebVitals.js","reducer/index.js","store.js","index.js"],"names":["axios","defaults","baseURL","process","signup","createAsyncThunk","payload","a","post","withCredentials","success","data","signin","authSlice","createSlice","name","initialState","loading","isAuth","hasToken","console","log","list","rc","document","cookie","split","forEach","parts","shift","trim","join","token","reducers","extraReducers","fulfilled","state","action","Signin","changeToSignup","dispatch","useDispatch","className","onSubmit","e","preventDefault","email","target","value","password","type","id","placeholder","required","href","onClick","Signup","changeToSignin","fullname","Auth","useState","authState","setAuthState","WebSocketContext","createContext","WebSocketProvider","children","conection","setConection","useEffect","socketConnection","WebSocket","error","Provider","useSocket","ws","useContext","undefined","Error","JSON","stringify","getChat","conversationId","get","messages","key","chatSlice","isLoading","chats","addMessage","push","actions","InputtingMessage","user","src","avatar","title","alt","Message","message","date","Date","createdAt","isMine","senderId","getHours","getMinutes","callSlice","conversation","isCalling","incommingCall","callAway","setConversation","setIncommingCall","setCallAway","setIsCallingToFalse","Wrapper","styled","div","EmojiPicker","React","forwardRef","ref","setValue","pickerStyle","contentRef","useRef","toggleRef","addEventListener","current","contains","classList","toggle","remove","clickOutsideRef","style","padding","set","position","zIndex","onSelect","emoji","preValue","native","Chat","useSelector","chat","currentConversation","conversations","setMessage","currentTyping","setCurrentTyping","call","wsData","preMessage","messContentRef","chatRef","emojiRef","send","_id","parse","pre","filter","scrollTop","offsetHeight","handleSendMessage","toISOString","role","map","ms","index","rows","onChange","onKeyDown","dispatchEvent","Event","left","bottom","getConversations","conversationSlice","chooseConversation","find","cvs","setLastMessage","lastMessageId","months","Conversation","getDay","Sidebar","display","justifyContent","Wrap","makingOffer","VolumeWrap","ModifyVolume","setVolume","min","max","defaultValue","Call","localVideoRef","remoteVideoRef","peerRTC","localStreamRef","acceptCall","setAcceptCall","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","innerVolumeChange","setInnerVolumeChange","polite","addedTrack","createRTCPeerCon","RTCPeerConnection","onicecandidate","handleICECandidateEvent","onnegotiationneeded","handleNegotiationNeededEvent","ontrack","handleTrackEvent","ignoreOffer","handleSignaling","description","candidate","getTracks","track","addTrack","offerCollision","signalingState","setRemoteDescription","setLocalDescription","localDescription","addIceCandidate","handleLeave","removeEventListener","initLocalStream","video","audio","then","closeVideoCall","handlePickup","navigator","mediaDevices","getUserMedia","stream","srcObject","item","stop","handleGetUserMediaError","onnicecandidate","oniceconnectionstatechange","onsignalingstatechange","onicegatheringstatechange","onnotificationneeded","getTransceivers","transceiver","close","streams","onunmute","alert","autoPlay","muted","getAudioTracks","enabled","getVideoTracks","volume","Number","testRef","temp","Home","getMe","userSlice","me","App","auth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","appReducer","combineReducers","rootReducer","configureStore","reducer","ReactDOM","render","store","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.70e9399a.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API\r\n\r\n\r\nexport const signup = createAsyncThunk('auth/signup', async (payload) => {\r\n    const { data: { success } } = await axios.post('/auth/signup', payload, {\r\n        withCredentials: true,\r\n    })\r\n    return success\r\n})\r\n\r\nexport const signin = createAsyncThunk('auth/signin', async (payload) => {\r\n    const { data: { success } } = await axios.post('/auth/signin', payload, {\r\n        withCredentials: true,\r\n    })\r\n    return success\r\n})\r\n\r\nfunction hasToken() {\r\n    console.log('check token')\r\n    var list = {},\r\n        rc = document.cookie;\r\n\r\n    rc && rc.split(';').forEach(function (cookie) {\r\n        var parts = cookie.split('=');\r\n        list[parts.shift().trim()] = parts.join('=');\r\n    });\r\n\r\n    return !!list.token;\r\n}\r\n\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: { loading: true, isAuth: false, hasToken: hasToken() },\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [signup.fulfilled]: (state, action) => {\r\n            state.loading = false\r\n            state.hasToken = action.payload\r\n        },\r\n        [signin.fulfilled]: (state, action) => {\r\n            state.loading = false\r\n            state.hasToken = action.payload\r\n        },\r\n\r\n    }\r\n})\r\n\r\nexport default authSlice.reducer","import { useDispatch } from 'react-redux';\r\nimport { signin } from '../../reducer/auth';\r\n\r\nconst Signin = ({ changeToSignup }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSignin = (e) => {\r\n        e.preventDefault()\r\n        dispatch(signin({\r\n            email:e.target.email.value,\r\n            password:e.target.password.value\r\n        }))\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"main order-md-1\">\r\n                <div className=\"start\">\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"content\">\r\n                                <h1>Sign in to Swipe</h1>\r\n                                {/* <div className=\"third-party\">\r\n                                    <button className=\"btn item bg-blue\">\r\n                                        <i className=\"material-icons\">pages</i>\r\n                                    </button>\r\n                                    <button className=\"btn item bg-teal\">\r\n                                        <i className=\"material-icons\">party_mode</i>\r\n                                    </button>\r\n                                    <button className=\"btn item bg-purple\">\r\n                                        <i className=\"material-icons\">whatshot</i>\r\n                                    </button>\r\n                                </div> */}\r\n                                <p>use your email account:</p>\r\n                                <form onSubmit={handleSignin}>\r\n                                    <div className=\"form-group\" >\r\n                                        <input type=\"email\" id=\"inputEmail\" className=\"form-control\" name='email' placeholder=\"Email Address\" required />\r\n                                        <button className=\"btn icon\"><i className=\"material-icons\">mail_outline</i></button>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"password\" id=\"inputPassword\" className=\"form-control\" name='password' placeholder=\"Password\" required />\r\n                                        <button className=\"btn icon\"><i className=\"material-icons\">lock_outline</i></button>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn button\">Sign In</button>\r\n                                    <div className=\"callout\">\r\n                                        <span>Don't have account? <a href=\"sign-up.html\">Create Account</a></span>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* End of Sign In */}\r\n            {/* Start of Sidebar */}\r\n            <div className=\"aside order-md-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"preference\">\r\n                            <h2>Hello, Friend!</h2>\r\n                            <p>Enter your personal details and start your journey with Swipe today.</p>\r\n                            <button onClick={changeToSignup} className=\"btn button\">Sign Up</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signin","import { useDispatch } from 'react-redux';\r\nimport { signup } from '../../reducer/auth';\r\n\r\nconst Signup = ({ changeToSignin }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const handleSignup = (e) => {\r\n        e.preventDefault()\r\n        dispatch(signup({\r\n            email: e.target.email.value,\r\n            password: e.target.password.value,\r\n            fullname: e.target.fullname.value\r\n        }))\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"main order-md-2\">\r\n                <div className=\"start\">\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"content\">\r\n                                <h1>Create Account</h1>\r\n                                {/* <div className=\"third-party\">\r\n                                    <button className=\"btn item bg-blue\">\r\n                                        <i className=\"material-icons\">pages</i>\r\n                                    </button>\r\n                                    <button className=\"btn item bg-teal\">\r\n                                        <i className=\"material-icons\">party_mode</i>\r\n                                    </button>\r\n                                    <button className=\"btn item bg-purple\">\r\n                                        <i className=\"material-icons\">whatshot</i>\r\n                                    </button>\r\n                                </div> */}\r\n                                <p>use your email for registration:</p>\r\n                                <form className=\"signup\" onSubmit={handleSignup}>\r\n                                    <div className=\"form-parent\">\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"text\" id=\"inputName\" className=\"form-control\" name='fullname' placeholder=\"Username\" required />\r\n                                            <button className=\"btn icon\"><i className=\"material-icons\">person_outline</i></button>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"email\" id=\"inputEmail\" className=\"form-control\" name='email' placeholder=\"Email Address\" required />\r\n                                            <button className=\"btn icon\"><i className=\"material-icons\">mail_outline</i></button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"password\" id=\"inputPassword\" className=\"form-control\" name='password' placeholder=\"Password\" required />\r\n                                        <button className=\"btn icon\"><i className=\"material-icons\">lock_outline</i></button>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn button\" >Sign Up</button>\r\n                                    <div className=\"callout\">\r\n                                        <span>Already a member? <a href=\"sign-in.html\">Sign In</a></span>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* End of Sign Up */}\r\n            {/* Start of Sidebar */}\r\n            <div className=\"aside order-md-1\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"preference\">\r\n                            <h2>Welcome Back!</h2>\r\n                            <p>To keep connected with your friends please login with your personal info.</p>\r\n                            <button onClick={changeToSignin} className=\"btn button\">Sign In</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signup","import React, { useState } from 'react';\r\nimport Signin from './Signin';\r\nimport Signup from './Signup';\r\n\r\nconst Auth = () => {\r\n\r\n    const [authState, setAuthState] = useState('signin')\r\n\r\n    return (\r\n        <>\r\n            {authState === 'signin'\r\n                ? <Signin changeToSignup={() => setAuthState('signup')} />\r\n                : <Signup changeToSignin={() => setAuthState('signin')} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const WebSocketContext = createContext(null)\r\n\r\nconst WebSocketProvider = ({ children }) => {\r\n    const [conection, setConection] = useState(null)\r\n    useEffect(() => {\r\n        try {\r\n            const socketConnection = new WebSocket(process.env.REACT_APP_WS)\r\n\r\n            setConection(socketConnection)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [])\r\n    return (\r\n        <WebSocketContext.Provider value={conection}>\r\n            {children}\r\n        </WebSocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport default WebSocketProvider;","import { useCallback, useContext } from 'react';\r\n\r\nimport { WebSocketContext } from '../context/Socket';\r\n\r\nconst useSocket = () => {\r\n    const ws = useContext(WebSocketContext)\r\n    // const wsData = useCallback((type, payload) => {\r\n    //     return JSON.stringify({ type, payload })\r\n    // }, [])\r\n    function wsData(type, payload) {\r\n        return JSON.stringify({ type, payload })\r\n    }\r\n    if (ws === undefined)\r\n        throw new Error('faillllllllllllll websocket')\r\n    return [ws, wsData]\r\n};\r\n\r\nexport default useSocket;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API\r\n\r\nexport const getChat = createAsyncThunk('chat/messages', async (conversationId) => {\r\n    const { data: { messages } } = await axios.get(`/conversation/${conversationId}/message`, { withCredentials: true })\r\n    return { key: conversationId, value: messages }\r\n})\r\n\r\nconst chatSlice = createSlice({\r\n    name: 'chat',\r\n    initialState: { isLoading: true, chats: {} },\r\n    reducers: {\r\n        addMessage(state, action) {\r\n            state.chats[action.payload.conversationId]?.push(action.payload)\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getChat.fulfilled]: (state, action) => {\r\n            state.isLoading = false\r\n            state.chats[action.payload.key] = action.payload.value\r\n        },\r\n    }\r\n})\r\n\r\nexport const { addMessage } = chatSlice.actions\r\n\r\nexport default chatSlice.reducer","import React from 'react';\r\n\r\nconst InputtingMessage = ({ user }) => {\r\n    return (\r\n        <div className=\"message\">\r\n            <img className=\"avatar-md\" src={user.avatar} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Keith\" alt=\"avatar\" />\r\n            <div className=\"text-main\">\r\n                <div className=\"text-group\">\r\n                    <div className=\"text typing\">\r\n                        <div className=\"wave\">\r\n                            <span className=\"dot\" />\r\n                            <span className=\"dot\" />\r\n                            <span className=\"dot\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputtingMessage;","import React from 'react';\r\n\r\nconst Message = ({ message }) => {\r\n    let date = new Date(message.createdAt)\r\n    return (\r\n        <div className={`message ${message.isMine ? 'me' : ''}`}>\r\n            {!message.isMine ?\r\n                <img className=\"avatar-md\" src={message.senderId.avatar} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Keith\" alt=\"avatar\" />\r\n                : ''\r\n            }\r\n            <div className=\"text-main\">\r\n                <div className={`text-group ${message.isMine ? 'me' : ''}`}>\r\n                    <div className={`text ${message.isMine ? 'me' : ''}`}>\r\n                        <p>{message.message}</p>\r\n                    </div>\r\n                </div>\r\n                <span>\r\n                    {/* <i className=\"material-icons\">check</i> */}\r\n                    {`${date.getHours()}:${date.getMinutes()}`}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst callSlice = createSlice({\r\n    name: 'call',\r\n    initialState: { conversation: null, isCalling: false, incommingCall: false, callAway: false },\r\n    reducers: {\r\n        setConversation(state, action) {\r\n            state.conversation = action.payload\r\n            state.isCalling = true\r\n        },\r\n        setIncommingCall(state, action) {\r\n            state.incommingCall = true\r\n            state.isCalling = true\r\n        },\r\n        setCallAway(state, action) {\r\n            state.callAway = true\r\n            state.isCalling = true\r\n        },\r\n        setIsCallingToFalse(state, payload) {\r\n            state.isCalling = state.incommingCall = state.callAway = false\r\n            state.conversation = null\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setConversation, setIncommingCall, setCallAway, setIsCallingToFalse } = callSlice.actions\r\n\r\nexport default callSlice.reducer","import React, { useEffect, useRef } from \"react\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport styled from \"styled-components\";\r\nimport 'emoji-mart/css/emoji-mart.css'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n\r\n  .emoji__picker--toggle {\r\n  }\r\n  .emoji__picker--content {\r\n    display: none;\r\n  }\r\n  .active {\r\n    display: block;\r\n  }\r\n  @media (max-width: 425px) {\r\n    .emoji-mart {\r\n      width: 280px !important;\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const clickOutsideRef = (contentRef, toggleRef) => {\r\n    document.addEventListener(\"mousedown\", (e) => {\r\n        // user click toggle\r\n        if (toggleRef.current && toggleRef.current.contains(e.target)) {\r\n            contentRef.current.classList.toggle(\"active\");\r\n        } else {\r\n            // user click outside toggle and content\r\n            if (contentRef.current && !contentRef.current.contains(e.target)) {\r\n                contentRef.current.classList.remove(\"active\");\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nconst EmojiPicker = React.forwardRef(({ setValue, pickerStyle }, ref) => {\r\n    const contentRef = useRef(null);\r\n    // const toggleRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        clickOutsideRef(contentRef, ref);\r\n    }, [ref]);\r\n    // useEffect(() => {\r\n    //     if (ref) {\r\n    //         ref.current = toggleRef.current\r\n    //         console.log(ref)\r\n    //     }\r\n    // }, [ref])\r\n\r\n    const handleAddEmoji = (emoji) => {\r\n        setValue((preValue) => preValue + emoji.native);\r\n    };\r\n    return (\r\n        <Wrapper>\r\n            <div ref={ref} className=\"emoji__picker--toggle\">\r\n                <i className=\"material-icons\" style={{ padding: '14px' }}>insert_emoticon</i>\r\n            </div>\r\n            <div ref={contentRef} className=\"emoji__picker--content\">\r\n                <Picker\r\n                    set=\"apple\"\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        zIndex: \"9\",\r\n                        ...pickerStyle,\r\n                    }}\r\n                    onSelect={handleAddEmoji}\r\n                />\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n});\r\n\r\nexport default EmojiPicker;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport useSocket from '../../hooks/useSocket';\r\nimport { addMessage, getChat } from '../../reducer/chat';\r\nimport InputtingMessage from './InputtingMessage';\r\nimport Message from './Message';\r\nimport { setCallAway, setConversation, setIsCallingToFalse } from '../../reducer/call.js';\r\nimport EmojiPicker from '../emoji/EmojiPicker';\r\n\r\n\r\nconst Wrap = styled.div`\r\n    position: fixed;\r\n    /* width: 200px;\r\n    height: 200px; */\r\n    z-index:9999999;\r\n    background:linear-gradient(145deg,rgba(140,167,255,1) 0,rgba(139,84,249,1) 50%,rgba(131,33,243,1) 100%);\r\n`\r\n\r\nconst Chat = () => {\r\n    const { isLoading, chats } = useSelector(state => state.chat)\r\n    const { currentConversation } = useSelector(state => state.conversations)\r\n    const [message, setMessage] = useState('')\r\n    const [currentTyping, setCurrentTyping] = useState([])\r\n    const { isCalling } = useSelector(state => state.call)\r\n    const [ws, wsData] = useSocket()\r\n    const dispatch = useDispatch()\r\n    const preMessage = useRef('')\r\n    const messContentRef = useRef()\r\n    const chatRef = useRef()\r\n    const emojiRef = useRef()\r\n\r\n\r\n    // useEffect(()=> {\r\n\r\n    // },[])\r\n\r\n    useEffect(() => {\r\n\r\n        if (preMessage.current === '' && message !== '') {\r\n            ws.send(wsData('start-typing', { conversationId: currentConversation._id }))\r\n        }\r\n\r\n        if (message === '' && preMessage.current !== '') {\r\n            ws.send(wsData('end-typing', { conversationId: currentConversation._id }))\r\n        }\r\n\r\n        if (preMessage.current !== message)\r\n            preMessage.current = message\r\n\r\n    }, [currentConversation._id, message, ws, wsData])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (message) {\r\n                setMessage('')\r\n                if (ws)\r\n                    ws.send(wsData('end-typing', { conversationId: currentConversation._id }))\r\n            }\r\n        }\r\n    }, [currentConversation._id])\r\n\r\n    useEffect(() => {\r\n        if (ws)\r\n            ws.addEventListener('message', ({ data }) => {\r\n                data = JSON.parse(data)\r\n                if (data.conversationId === currentConversation._id)\r\n                    switch (data.type) {\r\n                        case 'start-typing':\r\n                            setCurrentTyping(pre => {\r\n                                return [...pre, data.payload.user]\r\n                            })\r\n                            break\r\n                        case 'end-typing':\r\n                            setCurrentTyping(pre => {\r\n                                return pre.filter(user => user._id !== data.payload.user._id)\r\n                            })\r\n                            break\r\n                        // case 'new-message':\r\n                        //     if (messContentRef.current && data.payload.conversationId === currentConversation._id) {\r\n                        //         messContentRef.current.scrollTop = 9999 || chatRef.current.offsetHeight\r\n                        //     }\r\n                        //     break\r\n                        default:\r\n                            return\r\n                    }\r\n            })\r\n    }, [ws, currentConversation._id])\r\n\r\n    useEffect(() => {\r\n        if (messContentRef.current) {\r\n            messContentRef.current.scrollTop = chatRef.current.offsetHeight\r\n        }\r\n    }, [chats])\r\n\r\n    useEffect(() => {\r\n        if (!chats[currentConversation._id] && currentConversation._id) {\r\n            dispatch(getChat(currentConversation._id))\r\n        }\r\n    }, [chats, currentConversation._id, dispatch])\r\n\r\n    // console.log(chats[currentConversation._id])\r\n\r\n    const handleSendMessage = (e) => {\r\n        if (!message.trim()) return\r\n        setMessage('')\r\n        const payload = {\r\n            type: 'text',\r\n            message,\r\n            conversationId: currentConversation._id,\r\n            createdAt: (new Date()).toISOString(),\r\n        }\r\n        ws.send(wsData('new-message', payload))\r\n        payload.isMine = true\r\n        dispatch(addMessage(payload))\r\n\r\n    }\r\n\r\n    const handleMakeCall = () => {\r\n        if (isCalling)\r\n            return\r\n        dispatch(setCallAway(true))\r\n        dispatch(setConversation(currentConversation))\r\n    }\r\n\r\n    if (!chats[currentConversation._id] || isLoading) return null\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main\">\r\n                <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                    {/* Start of Babble */}\r\n                    <div className=\"babble tab-pane fade active show\" id=\"list-chat\" role=\"tabpanel\" aria-labelledby=\"list-chat-list\">\r\n                        {/* Start of Chat */}\r\n                        <div className=\"chat\" id=\"chat1\">\r\n                            <div className=\"top\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"inside\">\r\n                                            <a href=\"/\" onClick={e => e.preventDefault()}><img className=\"avatar-md\" src={currentConversation.avatar} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Keith\" alt=\"avatar\" /></a>\r\n                                            <div className=\"status\">\r\n                                                <i className=\"material-icons online\">fiber_manual_record</i>\r\n                                            </div>\r\n                                            <div className=\"data\">\r\n                                                <h5><a href=\"/\" onClick={e => e.preventDefault()}>{currentConversation.title}</a></h5>\r\n                                                <span>Active now</span>\r\n                                            </div>\r\n                                            {/* <button className=\"btn connect d-md-block d-none\" name={1}><i className=\"material-icons md-30\">phone_in_talk</i></button> */}\r\n                                            <button className=\"btn connect d-md-block d-none\" name={1} onClick={handleMakeCall}><i className=\"material-icons md-36\">videocam</i></button>\r\n                                            {/* <button className=\"btn d-md-block d-none\"><i className=\"material-icons md-30\">info</i></button> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div ref={messContentRef} className=\"content\" id=\"content\">\r\n                                <div ref={chatRef} className=\"container\">\r\n                                    <div className=\"col-md-12\">\r\n                                        {chats[currentConversation._id]?.map((ms, index) => <Message key={ms._id || index} message={ms} />)}\r\n                                        {currentTyping?.map((user, index) => <InputtingMessage user={user} key={index} />)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"bottom\">\r\n                                        <form className=\"position-relative w-100\" >\r\n                                            <textarea\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Start typing for reply...\"\r\n                                                rows={1}\r\n                                                value={message}\r\n                                                onChange={e => setMessage(e.target.value)}\r\n                                                onKeyDown={e => {\r\n                                                    if (e.key === 'Enter') {\r\n                                                        e.preventDefault()\r\n                                                        handleSendMessage()\r\n                                                    }\r\n                                                    else return\r\n                                                }}\r\n                                            />\r\n                                            <div style={{ padding: 0 }} className=\"btn emoticons\" onClick={e => {\r\n                                                e.preventDefault()\r\n                                                emojiRef.current.dispatchEvent(new Event('mousedown'))\r\n                                            }}>\r\n                                                <EmojiPicker ref={emojiRef} setValue={setMessage} pickerStyle={{ left: 0, bottom: '50px' }} />\r\n                                            </div>\r\n                                            <button type=\"button\" className=\"btn send\" onClick={handleSendMessage}><i className=\"material-icons\">send</i></button>\r\n                                        </form>\r\n                                        {/* <label>\r\n                                            <input type=\"file\" />\r\n                                            <span className=\"btn attach d-sm-block d-none\"><i className=\"material-icons\">attach_file</i></span>\r\n                                        </label> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* End of Chat */}\r\n                        {/* start call */}\r\n\r\n                        {/* end call */}\r\n                    </div>\r\n                    {/* End of Babble */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Chat;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API\r\nexport const getConversations = createAsyncThunk('conversations/list', async () => {\r\n    const { data: { conversations } } = await axios.get('/conversation', {\r\n        withCredentials: true,\r\n    })\r\n    return conversations\r\n})\r\n\r\nconst conversationSlice = createSlice({\r\n    name: 'conversations',\r\n    initialState: { isLoading: true, currentConversation: '', conversations: [] },\r\n    reducers: {\r\n        chooseConversation(state, action) {\r\n            state.currentConversation = state.conversations.find(cvs => cvs._id === action.payload)\r\n        },\r\n        setLastMessage(state, action) {\r\n            state.conversations.forEach(cvs => {\r\n                if (cvs._id === action.payload.conversationId)\r\n                    cvs.lastMessageId = action.payload\r\n            })\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getConversations.fulfilled]: (state, action) => {\r\n            state.isLoading = false\r\n            state.conversations = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const { chooseConversation, setLastMessage } = conversationSlice.actions\r\n\r\nexport default conversationSlice.reducer","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux';\r\nimport { chooseConversation } from '../../reducer/conversation';\r\nimport { getChat } from '../../reducer/chat';\r\n\r\nconst Wrap = styled.div`\r\n    height: 80px;\r\n    width:100%;\r\n`\r\nconst months = ['Mon', 'Tue', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun']\r\n\r\nconst Conversation = ({ cvs }) => {\r\n    const dispatch = useDispatch()\r\n    const chooseCurrentConversation = (e) => {\r\n        e.preventDefault()\r\n        dispatch(getChat(cvs._id))\r\n        dispatch(chooseConversation(cvs._id))\r\n    }\r\n    return (\r\n        <a onClick={chooseCurrentConversation} href=\"#list-chat\" className=\"filterDiscussions all unread single active\" id=\"list-chat-list\" data-toggle=\"list\" role=\"tab\">\r\n            <img className=\"avatar-md\" src={cvs.avatar} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Janette\" alt=\"avatar\" />\r\n            <div className=\"status\">\r\n                <i className=\"material-icons online\">fiber_manual_record</i>\r\n            </div>\r\n            {/* <div className=\"new bg-yellow\">\r\n                <span>+7</span>\r\n            </div> */}\r\n            <div className=\"data\">\r\n                <h5>{cvs.title}</h5>\r\n                <span>{months[(new Date(cvs.lastMessageId.createdAt)).getDay()]}</span>\r\n                <p>{cvs.lastMessageId.message}</p>\r\n            </div>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Conversation;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components'\r\nimport useSocket from '../../hooks/useSocket';\r\nimport { addMessage } from '../../reducer/chat';\r\nimport { getConversations, setLastMessage } from '../../reducer/conversation';\r\nimport Conversation from './Conversation';\r\n\r\nconst Wrap = styled.div`\r\n    border: 1px solid black;\r\n`\r\n\r\nconst Sidebar = () => {\r\n    const { isLoading, conversations } = useSelector(state => state.conversations)\r\n    const dispatch = useDispatch()\r\n    const [ws, wsData] = useSocket()\r\n    useEffect(() => {\r\n        if (ws)\r\n            ws.addEventListener('message', ({ data }) => {\r\n\r\n                data = JSON.parse(data)\r\n                if (data.type === 'new-message') {\r\n                    dispatch(setLastMessage(data.payload.message))\r\n                    if (!data.payload.message.isMine)\r\n                        dispatch(addMessage(data.payload.message))\r\n                }\r\n            })\r\n    }, [ws, dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(getConversations())\r\n    }, [dispatch])\r\n\r\n    const handleLogout = () => {\r\n        document.cookie = \"token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n        dispatch({type:'LOGOUT'})\r\n    }\r\n    if (isLoading) return '...loading'\r\n    return (\r\n        <>\r\n            {/* Start of Sidebar */}\r\n            <div className=\"sidebar\" id=\"sidebar\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"tab-content\">\r\n\r\n                            {/* Start of Discussions */}\r\n                            <div id=\"discussions\" className=\"tab-pane fade active show\">\r\n                                {/* <div className=\"search\">\r\n                                    <form className=\"form-inline position-relative\">\r\n                                        <input type=\"search\" className=\"form-control\" id=\"conversations\" placeholder=\"Search for conversations...\" />\r\n                                        <button type=\"button\" className=\"btn btn-link loop\"><i className=\"material-icons\">search</i></button>\r\n                                    </form>\r\n                                    <button className=\"btn create\" data-toggle=\"modal\" data-target=\"#startnewchat\"><i className=\"material-icons\">create</i></button>\r\n                                </div> */}\r\n\r\n                                <div className=\"discussions\">\r\n                                    <div style={{ display: \"flex\", justifyContent: 'space-between' }}>\r\n                                        <h1>Discussions</h1>\r\n                                        <button className='btn btn-outline-danger' onClick={handleLogout}>\r\n                                        <i className=\"material-icons md-30\">power_settings_new</i>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"list-group\" id=\"chats\" role=\"tablist\">\r\n                                        {conversations?.map(cvs => <Conversation key={cvs._id} cvs={cvs} />)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* End of Discussions */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* End of Sidebar */}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React, { useEffect, useRef, useState } from 'react';\r\nimport useSocket from '../../hooks/useSocket';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIncommingCall, setIsCallingToFalse } from '../../reducer/call'\r\n\r\nconst Wrap = styled.div`\r\n    position: fixed;\r\n    width: 390px;\r\n    height: 300px;\r\n    z-index: 9999999;\r\n    top: 100px;\r\n\r\n    right: 0;\r\n\r\n    background-color: aliceblue;\r\n    filter: white;\r\n    .hover__inner {\r\n        opacity: 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .call-end {\r\n        color: red;\r\n    }\r\n    .pick-up {\r\n        color: green;\r\n    }\r\n    :hover .hover__inner {\r\n        position: absolute;\r\n        width: 390px;\r\n        height: 300px;\r\n        z-index: 99999999;\r\n        opacity: 1;\r\n    }\r\n    .relative {\r\n        position: relative;\r\n    }\r\n\r\n    #local__video {\r\n        position: absolute;\r\n        width: 130px;\r\n        height: 100px;\r\n        /* border: 1px solid black; */\r\n        z-index: 99999990;\r\n    }\r\n    #remote__video {\r\n        position: absolute;\r\n        width: 390px;\r\n        height: 300px;\r\n        /* border: 1px solid black; */\r\n        /* z-index: 99999999; */\r\n    }\r\n`\r\nlet makingOffer = false\r\nconst Call = () => {\r\n    const [ws, wsData] = useSocket()\r\n    const localVideoRef = useRef()\r\n    const remoteVideoRef = useRef()\r\n    const peerRTC = useRef(null)\r\n    const localStreamRef = useRef(null)\r\n    const { conversation, incommingCall, callAway } = useSelector(state => state.call)\r\n    const [acceptCall, setAcceptCall] = useState(true)\r\n    const dispatch = useDispatch()\r\n    const [audioEnabled, setAudioEnabled] = useState(true)\r\n    const [videoEnabled, setVideoEnabled] = useState(true)\r\n    const [innerVolumeChange, setInnerVolumeChange] = useState(false)\r\n    const polite = useRef(callAway)\r\n    const addedTrack = useRef(false)\r\n\r\n\r\n    useEffect(() => {\r\n        let ignoreOffer = false\r\n        const handleSignaling = async ({ data }) => {\r\n            try {\r\n                data = JSON.parse(data);\r\n            } catch (error) {\r\n                //log(error)\r\n            }\r\n            const { type, payload: { description, candidate } } = data\r\n            if (type === 'signaling')\r\n                try {\r\n                    console.log('type: ' + (candidate ? 'candidate' : description.type))\r\n                    if (!addedTrack.current) {\r\n                        addedTrack.current = true\r\n                        for (const track of localStreamRef.current.getTracks()) {\r\n                            peerRTC.current.addTrack(track, localStreamRef.current);\r\n                        }\r\n                    }\r\n                    if (description) {\r\n                        const offerCollision = (description.type === \"offer\") &&\r\n                            (makingOffer || peerRTC.current.signalingState !== \"stable\");\r\n\r\n                        ignoreOffer = !polite && offerCollision;\r\n                        if (ignoreOffer) {\r\n                            return;\r\n                        }\r\n                        await peerRTC.current.setRemoteDescription(description);\r\n                        if (description.type === \"offer\") {\r\n                            await peerRTC.current.setLocalDescription();\r\n                            ws.send(wsData('signaling', { description: peerRTC.current.localDescription, conversationId: conversation._id }));\r\n                        }\r\n                    } else if (candidate) {\r\n                        try {\r\n                            await peerRTC.current.addIceCandidate(candidate);\r\n                        } catch (err) {\r\n                            if (!ignoreOffer) {\r\n                                throw err;\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n            if (type === 'leave')\r\n                handleLeave()\r\n        }\r\n        if (ws) {\r\n\r\n            ws.addEventListener('message', handleSignaling)\r\n        }\r\n        return () => {\r\n            if (ws)\r\n                ws.removeEventListener('message', handleSignaling)\r\n        }\r\n    }, [ws])\r\n\r\n    // make call\r\n    useEffect(() => {\r\n\r\n        //log('make calll')\r\n        if (callAway) {\r\n            createRTCPeerCon()\r\n            initLocalStream({ video: true, audio: true }).then(() => {\r\n                console.log('make call')\r\n                ws.send(wsData('make-call', { conversationId: conversation._id }))\r\n                if (!remoteVideoRef.current)\r\n                    ws.send(wsData('leave', { conversationId: conversation._id }))\r\n            })\r\n        }\r\n    }, [ws, callAway])\r\n\r\n    // clean up mediaStream\r\n    useEffect(() => () => {\r\n        console.log('leavee')\r\n        closeVideoCall()\r\n        ws.send(wsData('leave', { conversationId: conversation._id }))\r\n    }, [])\r\n\r\n    function createRTCPeerCon() {\r\n        //using Google public stun server \r\n        var configuration = {\r\n            \"iceServers\": [{ \"urls\": \"stun:stun2.1.google.com:19302\" }]\r\n        };\r\n\r\n        peerRTC.current = new RTCPeerConnection(configuration);\r\n\r\n        peerRTC.current.onicecandidate = handleICECandidateEvent;\r\n        peerRTC.current.onnegotiationneeded = handleNegotiationNeededEvent;\r\n        peerRTC.current.ontrack = handleTrackEvent;\r\n    }\r\n\r\n    const leaveCall = () => {\r\n        // ws.send(wsData('leave', { conversationId: conversation._id }))\r\n        closeVideoCall()\r\n    }\r\n    const handleLeave = () => {\r\n        closeVideoCall()\r\n    }\r\n\r\n    const handlePickup = async () => {\r\n        console.log('pickup')\r\n        setAcceptCall(false)\r\n        createRTCPeerCon()\r\n        initLocalStream({ video: true, audio: true }).then(() => {\r\n            addedTrack.current = true\r\n            for (const track of localStreamRef.current.getTracks()) {\r\n                peerRTC.current.addTrack(track, localStreamRef.current);\r\n            }\r\n            if (!remoteVideoRef.current)\r\n                ws.send(wsData('leave', { conversationId: conversation._id }))\r\n        })\r\n    }\r\n\r\n    const initLocalStream = async ({ video, audio }) => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ video, audio });\r\n            localStreamRef.current = stream\r\n            if (localVideoRef.current)\r\n                localVideoRef.current.srcObject = stream\r\n            else {\r\n                console.log('leave callllllllllllllllllll')\r\n                localStreamRef.current.getTracks().forEach(item => item.stop())\r\n            }\r\n        } catch (error) {\r\n            handleGetUserMediaError(error)\r\n        }\r\n    }\r\n\r\n    const handleMuteVideo = () => {\r\n        if (localStreamRef.current) {\r\n            localStreamRef.current.getVideoTracks().forEach(item => item.enabled = !videoEnabled)\r\n            setVideoEnabled(!videoEnabled)\r\n        }\r\n    }\r\n\r\n    const handleMuteAudio = () => {\r\n        if (localStreamRef.current) {\r\n            localStreamRef.current.getAudioTracks().forEach(item => item.enabled = !audioEnabled)\r\n            setAudioEnabled(!audioEnabled)\r\n        }\r\n    }\r\n\r\n    const handleVolume = (e) => {\r\n        if (remoteVideoRef.current) {\r\n            remoteVideoRef.current.volume = Number(e.target.value) / 100\r\n        }\r\n    }\r\n\r\n    const handleICECandidateEvent = (e) => {\r\n        if (e.candidate) {\r\n            //log(\"*** Outgoing ICE candidate: \" + e.candidate.candidate);\r\n            ws.send(wsData('signaling', { conversationId: conversation._id, candidate: e.candidate }))\r\n        }\r\n    }\r\n\r\n    function closeVideoCall() {\r\n        //log(\"Closing the call\");\r\n        dispatch(setIsCallingToFalse())\r\n\r\n        if (localStreamRef.current) {\r\n            localStreamRef.current.getTracks().forEach(track => {\r\n                track.stop();\r\n            });\r\n        }\r\n\r\n        if (peerRTC.current) {\r\n            peerRTC.current.ontrack = null;\r\n            peerRTC.current.onnicecandidate = null;\r\n            peerRTC.current.oniceconnectionstatechange = null;\r\n            peerRTC.current.onsignalingstatechange = null;\r\n            peerRTC.current.onicegatheringstatechange = null;\r\n            peerRTC.current.onnotificationneeded = null;\r\n\r\n            // Stop all transceivers on the connection\r\n\r\n            peerRTC.current.getTransceivers().forEach(transceiver => {\r\n                transceiver.stop();\r\n            });\r\n\r\n            peerRTC.current.close();\r\n            peerRTC.current = null;\r\n            localStreamRef.current = null;\r\n        }\r\n    }\r\n\r\n    async function handleNegotiationNeededEvent() {\r\n        try {\r\n            makingOffer = true;\r\n            await peerRTC.current.setLocalDescription();\r\n            ws.send(wsData(\"signaling\", { description: peerRTC.current.localDescription, conversationId: conversation._id }));\r\n        } catch (err) {\r\n            console.error(err);\r\n        } finally {\r\n            makingOffer = false;\r\n        }\r\n    }\r\n\r\n    function handleTrackEvent({ track, streams }) {\r\n        track.onunmute = () => {\r\n            if (remoteVideoRef.current.srcObject) {\r\n                return;\r\n            }\r\n            remoteVideoRef.current.srcObject = streams[0];\r\n        };\r\n    }\r\n\r\n    function handleGetUserMediaError(e) {\r\n        console.error(e);\r\n        switch (e.name) {\r\n            case \"NotFoundError\":\r\n                alert(\"Unable to open your call because no camera and/or microphone\" +\r\n                    \"were found.\");\r\n                break;\r\n            case \"SecurityError\":\r\n            case \"PermissionDeniedError\":\r\n                // Do nothing; this is the same as the user canceling the call.\r\n                break;\r\n            default:\r\n                alert(\"Error opening your camera and/or microphone: \" + e.message);\r\n                break;\r\n        }\r\n\r\n        // Make sure we shut down our end of the RTCPeerConnection so we're\r\n        // ready to try again.\r\n\r\n        closeVideoCall();\r\n    }\r\n\r\n    return (\r\n        <Wrap>\r\n            <video ref={localVideoRef} autoPlay={true} id='local__video' muted />\r\n            <video ref={remoteVideoRef} autoPlay={true} id='remote__video' />\r\n\r\n            <div className='hover__inner'>\r\n                {/* <div className=\"participant\">\r\n                    <img className=\"avatar-xxl\" src=\"dist/img/avatars/avatar-female-5.jpg\" alt=\"avatar\" />\r\n                    <span>Connecting</span>\r\n                </div> */}\r\n                <div className=\"options\">\r\n                    <button className=\"btn option\" onClick={handleMuteAudio}>\r\n                        {audioEnabled\r\n                            ? <i className=\"material-icons md-30\" >mic</i>\r\n                            : <i className=\"material-icons md-30\" >mic_off</i>\r\n                        }\r\n                    </button>\r\n                    <button className=\"btn option\" onClick={handleMuteVideo}>\r\n                        {videoEnabled\r\n                            ? <i className=\"material-icons md-30\" >videocam</i>\r\n                            : <i className=\"material-icons md-30\" >videocam_off</i>\r\n                        }\r\n                    </button>\r\n                    {incommingCall && acceptCall && <button className=\"btn pick-up\" onClick={handlePickup}><i className=\"material-icons md-30\" >call</i></button>}\r\n                    <button className=\"btn option call-end\" onClick={leaveCall}><i className=\"material-icons md-30\">call_end</i></button>\r\n                    {/* <button className=\"btn option\"><i className=\"material-icons md-30\">person_add</i></button> */}\r\n                    <button className=\"btn option relative\" >\r\n                        <i className=\"material-icons md-30\" onClick={() => setInnerVolumeChange(!innerVolumeChange)}>volume_up</i>\r\n                        {innerVolumeChange && <ModifyVolume setVolume={handleVolume} />}\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n        </Wrap>\r\n    );\r\n};\r\n\r\nconst VolumeWrap = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    left: -50px;\r\n`\r\n\r\nconst ModifyVolume = ({ setVolume }) => {\r\n    return (\r\n        <VolumeWrap>\r\n            <i className=\"material-icons md-30\">volume_down</i>\r\n            <input type=\"range\" min=\"0\" max=\"100\" defaultValue=\"100\" id=\"myRange\" onChange={setVolume} />\r\n            <i className=\"material-icons md-30\">volume_up</i>\r\n        </VolumeWrap>\r\n    )\r\n}\r\n\r\nexport default Call;","import React, { useEffect, useRef, useState } from 'react';\r\nimport useSocket from '../../hooks/useSocket';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIncommingCall, setConversation, setIsCallingToFalse } from '../../reducer/call'\r\n\r\nimport CallModal from './CallModal3'\r\n\r\nconst Call = () => {\r\n    const [ws, wsData] = useSocket()\r\n    const dispatch = useDispatch()\r\n    const testRef = useRef()\r\n    const { isCalling, conversation } = useSelector(state => state.call)\r\n    const { conversations } = useSelector(state => state.conversations)\r\n\r\n    useEffect(() => {\r\n        testRef.current = conversations\r\n    }, [conversations])\r\n\r\n    useEffect(() => {\r\n        if (ws) {\r\n            ws.addEventListener('message', ({ data }) => {\r\n                try {\r\n                    data = JSON.parse(data);\r\n                } catch (error) {\r\n                    data = data\r\n                }\r\n                if (data.type === \"incomming-call\") {\r\n                    let temp = testRef.current.find(item => item._id === data.payload.conversationId)\r\n                    dispatch(setConversation(temp))\r\n                    dispatch(setIncommingCall(true))\r\n                }\r\n            })\r\n        }\r\n    }, [ws,dispatch])\r\n\r\n    if (!isCalling) return null\r\n    return (\r\n        <CallModal />\r\n    )\r\n}\r\n\r\nexport default Call","import React from 'react';\r\nimport Chat from '../components/chat/Chat';\r\nimport Sidebar from '../components/sidebar/Sidebar';\r\nimport Call from '../components/call/Call'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Sidebar />\r\n            <Chat />\r\n            <Call />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API\r\n\r\nexport const getMe = createAsyncThunk('me/getMe', async () => {\r\n\r\n    const { data: { data: user } } = await axios.get('/auth/me', { withCredentials: true })\r\n    return user\r\n})\r\n\r\nconst userSlice = createSlice({\r\n    name: 'me',\r\n    initialState: { me: null, loading: true },\r\n    extraReducers: {\r\n        [getMe.fulfilled]: (state, action) => {\r\n            state.loading = false\r\n            state.me = action.payload\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport default userSlice.reducer","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Auth from \"./components/auth/Auth\";\nimport WebSocketProvider from \"./context/Socket\";\nimport Home from \"./pages/Home\";\nimport { getMe } from \"./reducer/user\";\n\nfunction App() {\n  const { hasToken, } = useSelector(state => state.auth)\n  const { loading, me } = useSelector(state => state.me)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (hasToken) {\n      dispatch(getMe())\n    }\n  }, [dispatch, hasToken])\n  \n  if (loading && hasToken) return '...'\n  return (\n    <main>\n      <div className='layout'>\n        {\n          me ? <WebSocketProvider> <Home /></WebSocketProvider> : <Auth />\n        }\n      </div>\n    </main>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from '@reduxjs/toolkit'\r\n\r\nimport auth from './auth'\r\nimport conversations from './conversation'\r\nimport chat from './chat.js'\r\nimport me from './user.js'\r\nimport call from './call.js'\r\n\r\nconst appReducer = combineReducers({\r\n    auth,\r\n    conversations,\r\n    chat,\r\n    me,\r\n    call,\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === 'LOGOUT')\r\n        state = undefined\r\n    return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport rootReducer from './reducer'\r\n\r\nexport default configureStore({ reducer: rootReducer })","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './css/swipe.min.css'\nimport './css/lib/bootstrap.min.css'\n\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}