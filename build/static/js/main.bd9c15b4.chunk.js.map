{"version":3,"sources":["reducer/auth.js","components/auth/Signin.js","components/auth/Signup.js","components/auth/Auth.js","context/Socket.js","hooks/useSocket.js","reducer/chat.js","components/chat/InputtingMessage.js","components/chat/Message.js","reducer/call.js","components/emoji/EmojiPicker.js","components/chat/Chat.js","reducer/conversation.js","components/sidebar/Conversation.js","components/sidebar/Sidebar.js","components/call/CallModal.js","components/call/Call.js","pages/Home.js","reducer/user.js","App.js","reportWebVitals.js","reducer/index.js","store.js","index.js"],"names":["axios","defaults","baseURL","process","signup","createAsyncThunk","payload","a","post","withCredentials","success","data","signin","authSlice","createSlice","name","initialState","loading","isAuth","hasToken","list","rc","document","cookie","split","forEach","parts","shift","trim","join","token","reducers","extraReducers","fulfilled","state","action","Signin","changeToSignup","dispatch","useDispatch","className","onSubmit","e","preventDefault","email","target","value","password","type","id","placeholder","required","href","onClick","Signup","changeToSignin","fullname","Auth","useState","authState","setAuthState","WebSocketContext","createContext","WebSocketProvider","children","conection","setConection","useEffect","socketConnection","WebSocket","error","console","log","Provider","useSocket","ws","useContext","undefined","Error","JSON","stringify","getChat","conversationId","get","messages","key","chatSlice","isLoading","chats","addMessage","push","actions","InputtingMessage","user","src","avatar","title","alt","Message","message","date","Date","createdAt","isMine","senderId","getHours","getMinutes","callSlice","conversation","isCalling","incommingCall","callAway","setConversation","setIncommingCall","setCallAway","setIsCallingToFalse","Wrapper","styled","div","EmojiPicker","React","forwardRef","ref","setValue","pickerStyle","contentRef","useRef","toggleRef","addEventListener","current","contains","classList","toggle","remove","clickOutsideRef","style","padding","set","position","zIndex","onSelect","emoji","preValue","native","Chat","useSelector","chat","currentConversation","conversations","setMessage","currentTyping","setCurrentTyping","call","wsData","preMessage","messContentRef","chatRef","emojiRef","send","_id","parse","pre","filter","scrollTop","offsetHeight","handleSendMessage","toISOString","role","map","ms","index","rows","onChange","onKeyDown","dispatchEvent","Event","left","bottom","getConversations","conversationSlice","chooseConversation","find","cvs","setLastMessage","lastMessageId","months","Conversation","getDay","Sidebar","Wrap","VolumeWrap","ModifyVolume","setVolume","min","max","defaultValue","Call","localVideoRef","remoteVideoRef","peerRTC","localStreamRef","acceptCall","setAcceptCall","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","innerVolumeChange","setInnerVolumeChange","createRTCPeerCon","connection","RTCPeerConnection","addStream","onaddstream","srcObject","stream","onicecandidate","event","candidate","handleSignaling","handleOffer","offer","handleAnswer","answer","handleCandidate","handleLeave","removeEventListener","initLocalStream","audio","video","then","getTracks","item","stop","catch","err","close","setRemoteDescription","RTCSessionDescription","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","handlePickup","createOffer","alert","navigator","mediaDevices","getUserMedia","autoPlay","muted","getAudioTracks","enabled","getVideoTracks","volume","Number","testRef","temp","CallModal","Home","getMe","userSlice","me","App","auth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","configureStore","reducer","rootReducer","ReactDOM","render","store","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd9c15b4.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API\r\n\r\n\r\nexport const signup = createAsyncThunk('auth/signup', async (payload) => {\r\n    const { data: { success } } = await axios.post('/auth/signup', payload, {\r\n        withCredentials: true,\r\n    })\r\n    return success\r\n})\r\n\r\nexport const signin = createAsyncThunk('auth/signin', async (payload) => {\r\n    const { data: { success } } = await axios.post('/auth/signin', payload, {\r\n        withCredentials: true,\r\n    })\r\n    return success\r\n})\r\n\r\nfunction hasToken() {\r\n    var list = {},\r\n        rc = document.cookie;\r\n\r\n    rc && rc.split(';').forEach(function (cookie) {\r\n        var parts = cookie.split('=');\r\n        list[parts.shift().trim()] = parts.join('=');\r\n    });\r\n\r\n    return !!list.token;\r\n}\r\n\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: { loading: true, isAuth: false, hasToken: hasToken() },\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [signup.fulfilled]: (state, action) => {\r\n            state.loading = false\r\n            state.hasToken = action.payload\r\n        },\r\n        [signin.fulfilled]: (state, action) => {\r\n            state.loading = false\r\n            state.hasToken = action.payload\r\n        },\r\n\r\n    }\r\n})\r\n\r\nexport default authSlice.reducer","import { useDispatch } from 'react-redux';\r\nimport { signin } from '../../reducer/auth';\r\n\r\nconst Signin = ({ changeToSignup }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSignin = (e) => {\r\n        e.preventDefault()\r\n        dispatch(signin({\r\n            email:e.target.email.value,\r\n            password:e.target.password.value\r\n        }))\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"main order-md-1\">\r\n                <div className=\"start\">\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"content\">\r\n                                <h1>Sign in to Swipe</h1>\r\n                                {/* <div className=\"third-party\">\r\n                                    <button className=\"btn item bg-blue\">\r\n                                        <i className=\"material-icons\">pages</i>\r\n                                    </button>\r\n                                    <button className=\"btn item bg-teal\">\r\n                                        <i className=\"material-icons\">party_mode</i>\r\n                                    </button>\r\n                                    <button className=\"btn item bg-purple\">\r\n                                        <i className=\"material-icons\">whatshot</i>\r\n                                    </button>\r\n                                </div> */}\r\n                                <p>use your email account:</p>\r\n                                <form onSubmit={handleSignin}>\r\n                                    <div className=\"form-group\" >\r\n                                        <input type=\"email\" id=\"inputEmail\" className=\"form-control\" name='email' placeholder=\"Email Address\" required />\r\n                                        <button className=\"btn icon\"><i className=\"material-icons\">mail_outline</i></button>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"password\" id=\"inputPassword\" className=\"form-control\" name='password' placeholder=\"Password\" required />\r\n                                        <button className=\"btn icon\"><i className=\"material-icons\">lock_outline</i></button>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn button\">Sign In</button>\r\n                                    <div className=\"callout\">\r\n                                        <span>Don't have account? <a href=\"sign-up.html\">Create Account</a></span>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* End of Sign In */}\r\n            {/* Start of Sidebar */}\r\n            <div className=\"aside order-md-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"preference\">\r\n                            <h2>Hello, Friend!</h2>\r\n                            <p>Enter your personal details and start your journey with Swipe today.</p>\r\n                            <button onClick={changeToSignup} className=\"btn button\">Sign Up</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signin","import { useDispatch } from 'react-redux';\r\nimport { signup } from '../../reducer/auth';\r\n\r\nconst Signup = ({ changeToSignin }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const handleSignup = (e) => {\r\n        e.preventDefault()\r\n        dispatch(signup({\r\n            email: e.target.email.value,\r\n            password: e.target.password.value,\r\n            fullname: e.target.fullname.value\r\n        }))\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"main order-md-2\">\r\n                <div className=\"start\">\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"content\">\r\n                                <h1>Create Account</h1>\r\n                                {/* <div className=\"third-party\">\r\n                                    <button className=\"btn item bg-blue\">\r\n                                        <i className=\"material-icons\">pages</i>\r\n                                    </button>\r\n                                    <button className=\"btn item bg-teal\">\r\n                                        <i className=\"material-icons\">party_mode</i>\r\n                                    </button>\r\n                                    <button className=\"btn item bg-purple\">\r\n                                        <i className=\"material-icons\">whatshot</i>\r\n                                    </button>\r\n                                </div> */}\r\n                                <p>use your email for registration:</p>\r\n                                <form className=\"signup\" onSubmit={handleSignup}>\r\n                                    <div className=\"form-parent\">\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"text\" id=\"inputName\" className=\"form-control\" name='fullname' placeholder=\"Username\" required />\r\n                                            <button className=\"btn icon\"><i className=\"material-icons\">person_outline</i></button>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"email\" id=\"inputEmail\" className=\"form-control\" name='email' placeholder=\"Email Address\" required />\r\n                                            <button className=\"btn icon\"><i className=\"material-icons\">mail_outline</i></button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"password\" id=\"inputPassword\" className=\"form-control\" name='password' placeholder=\"Password\" required />\r\n                                        <button className=\"btn icon\"><i className=\"material-icons\">lock_outline</i></button>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn button\" >Sign Up</button>\r\n                                    <div className=\"callout\">\r\n                                        <span>Already a member? <a href=\"sign-in.html\">Sign In</a></span>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* End of Sign Up */}\r\n            {/* Start of Sidebar */}\r\n            <div className=\"aside order-md-1\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"preference\">\r\n                            <h2>Welcome Back!</h2>\r\n                            <p>To keep connected with your friends please login with your personal info.</p>\r\n                            <button onClick={changeToSignin} className=\"btn button\">Sign In</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signup","import React, { useState } from 'react';\r\nimport Signin from './Signin';\r\nimport Signup from './Signup';\r\n\r\nconst Auth = () => {\r\n\r\n    const [authState, setAuthState] = useState('signin')\r\n\r\n    return (\r\n        <>\r\n            {authState === 'signin'\r\n                ? <Signin changeToSignup={() => setAuthState('signup')} />\r\n                : <Signup changeToSignin={() => setAuthState('signin')} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const WebSocketContext = createContext(null)\r\n\r\nconst WebSocketProvider = ({ children }) => {\r\n    const [conection, setConection] = useState(null)\r\n    useEffect(() => {\r\n        try {\r\n            const socketConnection = new WebSocket(process.env.REACT_APP_WS)\r\n\r\n            setConection(socketConnection)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [])\r\n    return (\r\n        <WebSocketContext.Provider value={conection}>\r\n            {children}\r\n        </WebSocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport default WebSocketProvider;","import { useCallback, useContext } from 'react';\r\n\r\nimport { WebSocketContext } from '../context/Socket';\r\n\r\nconst useSocket = () => {\r\n    const ws = useContext(WebSocketContext)\r\n    // const wsData = useCallback((type, payload) => {\r\n    //     return JSON.stringify({ type, payload })\r\n    // }, [])\r\n    function wsData(type, payload) {\r\n        return JSON.stringify({ type, payload })\r\n    }\r\n    if (ws === undefined)\r\n        throw new Error('faillllllllllllll websocket')\r\n    return [ws, wsData]\r\n};\r\n\r\nexport default useSocket;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API\r\n\r\nexport const getChat = createAsyncThunk('chat/messages', async (conversationId) => {\r\n    const { data: { messages } } = await axios.get(`/conversation/${conversationId}/message`, { withCredentials: true })\r\n    console.log(messages)\r\n    return { key: conversationId, value: messages }\r\n})\r\n\r\nconst chatSlice = createSlice({\r\n    name: 'chat',\r\n    initialState: { isLoading: true, chats: {} },\r\n    reducers: {\r\n        addMessage(state, action) {\r\n            state.chats[action.payload.conversationId]?.push(action.payload)\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getChat.fulfilled]: (state, action) => {\r\n            state.isLoading = false\r\n            state.chats[action.payload.key] = action.payload.value\r\n        },\r\n    }\r\n})\r\n\r\nexport const { addMessage } = chatSlice.actions\r\n\r\nexport default chatSlice.reducer","import React from 'react';\r\n\r\nconst InputtingMessage = ({ user }) => {\r\n    return (\r\n        <div className=\"message\">\r\n            <img className=\"avatar-md\" src={user.avatar} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Keith\" alt=\"avatar\" />\r\n            <div className=\"text-main\">\r\n                <div className=\"text-group\">\r\n                    <div className=\"text typing\">\r\n                        <div className=\"wave\">\r\n                            <span className=\"dot\" />\r\n                            <span className=\"dot\" />\r\n                            <span className=\"dot\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputtingMessage;","import React from 'react';\r\n\r\nconst Message = ({ message }) => {\r\n    let date = new Date(message.createdAt)\r\n    return (\r\n        <div className={`message ${message.isMine ? 'me' : ''}`}>\r\n            {!message.isMine ?\r\n                <img className=\"avatar-md\" src={message.senderId.avatar} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Keith\" alt=\"avatar\" />\r\n                : ''\r\n            }\r\n            <div className=\"text-main\">\r\n                <div className={`text-group ${message.isMine ? 'me' : ''}`}>\r\n                    <div className={`text ${message.isMine ? 'me' : ''}`}>\r\n                        <p>{message.message}</p>\r\n                    </div>\r\n                </div>\r\n                <span>\r\n                    {/* <i className=\"material-icons\">check</i> */}\r\n                    {`${date.getHours()}:${date.getMinutes()}`}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst callSlice = createSlice({\r\n    name: 'call',\r\n    initialState: { conversation: null, isCalling: false, incommingCall: false, callAway: false },\r\n    reducers: {\r\n        setConversation(state, action) {\r\n            state.conversation = action.payload\r\n            state.isCalling = true\r\n        },\r\n        setIncommingCall(state, action) {\r\n            state.incommingCall = true\r\n            state.isCalling = true\r\n        },\r\n        setCallAway(state, action) {\r\n            state.callAway = true\r\n            state.isCalling = true\r\n        },\r\n        setIsCallingToFalse(state, payload) {\r\n            state.isCalling = state.incommingCall = state.callAway = false\r\n            state.conversation = null\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setConversation, setIncommingCall, setCallAway, setIsCallingToFalse } = callSlice.actions\r\n\r\nexport default callSlice.reducer","import React, { useEffect, useRef } from \"react\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport styled from \"styled-components\";\r\nimport 'emoji-mart/css/emoji-mart.css'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n\r\n  .emoji__picker--toggle {\r\n  }\r\n  .emoji__picker--content {\r\n    display: none;\r\n  }\r\n  .active {\r\n    display: block;\r\n  }\r\n  @media (max-width: 425px) {\r\n    .emoji-mart {\r\n      width: 280px !important;\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const clickOutsideRef = (contentRef, toggleRef) => {\r\n    document.addEventListener(\"mousedown\", (e) => {\r\n        // user click toggle\r\n        if (toggleRef.current && toggleRef.current.contains(e.target)) {\r\n            contentRef.current.classList.toggle(\"active\");\r\n        } else {\r\n            // user click outside toggle and content\r\n            if (contentRef.current && !contentRef.current.contains(e.target)) {\r\n                contentRef.current.classList.remove(\"active\");\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nconst EmojiPicker = React.forwardRef(({ setValue, pickerStyle }, ref) => {\r\n    const contentRef = useRef(null);\r\n    // const toggleRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        clickOutsideRef(contentRef, ref);\r\n    }, [ref]);\r\n    // useEffect(() => {\r\n    //     if (ref) {\r\n    //         ref.current = toggleRef.current\r\n    //         console.log(ref)\r\n    //     }\r\n    // }, [ref])\r\n\r\n    const handleAddEmoji = (emoji) => {\r\n        setValue((preValue) => preValue + emoji.native);\r\n    };\r\n    return (\r\n        <Wrapper>\r\n            <div ref={ref} className=\"emoji__picker--toggle\">\r\n                <i className=\"material-icons\" style={{ padding: '14px' }}>insert_emoticon</i>\r\n            </div>\r\n            <div ref={contentRef} className=\"emoji__picker--content\">\r\n                <Picker\r\n                    set=\"apple\"\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        zIndex: \"9\",\r\n                        ...pickerStyle,\r\n                    }}\r\n                    onSelect={handleAddEmoji}\r\n                />\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n});\r\n\r\nexport default EmojiPicker;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport useSocket from '../../hooks/useSocket';\r\nimport { addMessage, getChat } from '../../reducer/chat';\r\nimport InputtingMessage from './InputtingMessage';\r\nimport Message from './Message';\r\nimport { setCallAway, setConversation, setIsCallingToFalse } from '../../reducer/call.js';\r\nimport EmojiPicker from '../emoji/EmojiPicker';\r\n\r\n\r\nconst Wrap = styled.div`\r\n    position: fixed;\r\n    /* width: 200px;\r\n    height: 200px; */\r\n    z-index:9999999;\r\n    background:linear-gradient(145deg,rgba(140,167,255,1) 0,rgba(139,84,249,1) 50%,rgba(131,33,243,1) 100%);\r\n`\r\n\r\nconst Chat = () => {\r\n    const { isLoading, chats } = useSelector(state => state.chat)\r\n    const { currentConversation } = useSelector(state => state.conversations)\r\n    const [message, setMessage] = useState('')\r\n    const [currentTyping, setCurrentTyping] = useState([])\r\n    const { isCalling } = useSelector(state => state.call)\r\n    const [ws, wsData] = useSocket()\r\n    const dispatch = useDispatch()\r\n    const preMessage = useRef('')\r\n    const messContentRef = useRef()\r\n    const chatRef = useRef()\r\n    const emojiRef = useRef()\r\n\r\n\r\n    // useEffect(()=> {\r\n\r\n    // },[])\r\n\r\n    useEffect(() => {\r\n\r\n        if (preMessage.current === '' && message !== '') {\r\n            ws.send(wsData('start-typing', { conversationId: currentConversation._id }))\r\n        }\r\n\r\n        if (message === '' && preMessage.current !== '') {\r\n            ws.send(wsData('end-typing', { conversationId: currentConversation._id }))\r\n        }\r\n\r\n        if (preMessage.current !== message)\r\n            preMessage.current = message\r\n\r\n    }, [currentConversation._id, message, ws, wsData])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (message) {\r\n                setMessage('')\r\n                if (ws)\r\n                    ws.send(wsData('end-typing', { conversationId: currentConversation._id }))\r\n            }\r\n        }\r\n    }, [currentConversation._id])\r\n\r\n    useEffect(() => {\r\n        if (ws)\r\n            ws.addEventListener('message', ({ data }) => {\r\n                data = JSON.parse(data)\r\n                if (data.conversationId === currentConversation._id)\r\n                    switch (data.type) {\r\n                        case 'start-typing':\r\n                            setCurrentTyping(pre => {\r\n                                return [...pre, data.payload.user]\r\n                            })\r\n                            break\r\n                        case 'end-typing':\r\n                            setCurrentTyping(pre => {\r\n                                return pre.filter(user => user._id !== data.payload.user._id)\r\n                            })\r\n                            break\r\n                        // case 'new-message':\r\n                        //     if (messContentRef.current && data.payload.conversationId === currentConversation._id) {\r\n                        //         messContentRef.current.scrollTop = 9999 || chatRef.current.offsetHeight\r\n                        //     }\r\n                        //     break\r\n                        default:\r\n                            return\r\n                    }\r\n            })\r\n    }, [ws, currentConversation._id])\r\n\r\n    useEffect(() => {\r\n        if (messContentRef.current) {\r\n            messContentRef.current.scrollTop = chatRef.current.offsetHeight\r\n            console.log('scorll bottom')\r\n        }\r\n    }, [chats])\r\n\r\n    useEffect(() => {\r\n        if (!chats[currentConversation._id] && currentConversation._id) {\r\n            dispatch(getChat(currentConversation._id))\r\n            console.log('get messages')\r\n        }\r\n    }, [chats, currentConversation._id, dispatch])\r\n\r\n    // console.log(chats[currentConversation._id])\r\n\r\n    const handleSendMessage = (e) => {\r\n        if (!message.trim()) return\r\n        setMessage('')\r\n        const payload = {\r\n            type: 'text',\r\n            message,\r\n            conversationId: currentConversation._id,\r\n            createdAt: (new Date()).toISOString(),\r\n        }\r\n        ws.send(wsData('new-message', payload))\r\n        payload.isMine = true\r\n        dispatch(addMessage(payload))\r\n\r\n    }\r\n\r\n    const handleMakeCall = () => {\r\n        if (isCalling)\r\n            return\r\n        dispatch(setCallAway(true))\r\n        dispatch(setConversation(currentConversation))\r\n    }\r\n\r\n    if (!chats[currentConversation._id] || isLoading) return null\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main\">\r\n                <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                    {/* Start of Babble */}\r\n                    <div className=\"babble tab-pane fade active show\" id=\"list-chat\" role=\"tabpanel\" aria-labelledby=\"list-chat-list\">\r\n                        {/* Start of Chat */}\r\n                        <div className=\"chat\" id=\"chat1\">\r\n                            <div className=\"top\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"inside\">\r\n                                            <a href=\"/\" onClick={e => e.preventDefault()}><img className=\"avatar-md\" src={currentConversation.avatar} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Keith\" alt=\"avatar\" /></a>\r\n                                            <div className=\"status\">\r\n                                                <i className=\"material-icons online\">fiber_manual_record</i>\r\n                                            </div>\r\n                                            <div className=\"data\">\r\n                                                <h5><a href=\"/\" onClick={e => e.preventDefault()}>{currentConversation.title}</a></h5>\r\n                                                <span>Active now</span>\r\n                                            </div>\r\n                                            {/* <button className=\"btn connect d-md-block d-none\" name={1}><i className=\"material-icons md-30\">phone_in_talk</i></button> */}\r\n                                            <button className=\"btn connect d-md-block d-none\" name={1} onClick={handleMakeCall}><i className=\"material-icons md-36\">videocam</i></button>\r\n                                            {/* <button className=\"btn d-md-block d-none\"><i className=\"material-icons md-30\">info</i></button> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div ref={messContentRef} className=\"content\" id=\"content\">\r\n                                <div ref={chatRef} className=\"container\">\r\n                                    <div className=\"col-md-12\">\r\n                                        {chats[currentConversation._id]?.map((ms, index) => <Message key={ms._id || index} message={ms} />)}\r\n                                        {currentTyping?.map((user, index) => <InputtingMessage user={user} key={index} />)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"bottom\">\r\n                                        <form className=\"position-relative w-100\" >\r\n                                            <textarea\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Start typing for reply...\"\r\n                                                rows={1}\r\n                                                value={message}\r\n                                                onChange={e => setMessage(e.target.value)}\r\n                                                onKeyDown={e => {\r\n                                                    if (e.key === 'Enter') {\r\n                                                        e.preventDefault()\r\n                                                        handleSendMessage()\r\n                                                    }\r\n                                                    else return\r\n                                                }}\r\n                                            />\r\n                                            <div style={{ padding: 0 }} className=\"btn emoticons\" onClick={e => {\r\n                                                e.preventDefault()\r\n                                                console.log(emojiRef)\r\n                                                emojiRef.current.dispatchEvent(new Event('mousedown'))\r\n                                            }}>\r\n                                                <EmojiPicker ref={emojiRef} setValue={setMessage} pickerStyle={{ left: 0, bottom: '50px' }} />\r\n                                            </div>\r\n                                            <button type=\"button\" className=\"btn send\" onClick={handleSendMessage}><i className=\"material-icons\">send</i></button>\r\n                                        </form>\r\n                                        {/* <label>\r\n                                            <input type=\"file\" />\r\n                                            <span className=\"btn attach d-sm-block d-none\"><i className=\"material-icons\">attach_file</i></span>\r\n                                        </label> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* End of Chat */}\r\n                        {/* start call */}\r\n\r\n                        {/* end call */}\r\n                    </div>\r\n                    {/* End of Babble */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Chat;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API\r\nexport const getConversations = createAsyncThunk('conversations/list', async () => {\r\n    const { data: { conversations } } = await axios.get('/conversation', {\r\n        withCredentials: true,\r\n    })\r\n    return conversations\r\n})\r\n\r\nconst conversationSlice = createSlice({\r\n    name: 'conversations',\r\n    initialState: { isLoading: true, currentConversation: '', conversations: [] },\r\n    reducers: {\r\n        chooseConversation(state, action) {\r\n            state.currentConversation = state.conversations.find(cvs => cvs._id === action.payload)\r\n        },\r\n        setLastMessage(state, action) {\r\n            state.conversations.forEach(cvs => {\r\n                if (cvs._id === action.payload.conversationId)\r\n                    cvs.lastMessageId = action.payload\r\n            })\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getConversations.fulfilled]: (state, action) => {\r\n            state.isLoading = false\r\n            state.conversations = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const { chooseConversation, setLastMessage } = conversationSlice.actions\r\n\r\nexport default conversationSlice.reducer","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux';\r\nimport { chooseConversation } from '../../reducer/conversation';\r\nimport { getChat } from '../../reducer/chat';\r\n\r\nconst Wrap = styled.div`\r\n    height: 80px;\r\n    width:100%;\r\n`\r\nconst months = ['Mon', 'Tue', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun']\r\n\r\nconst Conversation = ({ cvs }) => {\r\n    const dispatch = useDispatch()\r\n    const chooseCurrentConversation = (e) => {\r\n        e.preventDefault()\r\n        dispatch(getChat(cvs._id))\r\n        dispatch(chooseConversation(cvs._id))\r\n    }\r\n    return (\r\n        <a onClick={chooseCurrentConversation} href=\"#list-chat\" className=\"filterDiscussions all unread single active\" id=\"list-chat-list\" data-toggle=\"list\" role=\"tab\">\r\n            <img className=\"avatar-md\" src={cvs.avatar} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Janette\" alt=\"avatar\" />\r\n            <div className=\"status\">\r\n                <i className=\"material-icons online\">fiber_manual_record</i>\r\n            </div>\r\n            {/* <div className=\"new bg-yellow\">\r\n                <span>+7</span>\r\n            </div> */}\r\n            <div className=\"data\">\r\n                <h5>{cvs.title}</h5>\r\n                <span>{months[(new Date(cvs.lastMessageId.createdAt)).getDay()]}</span>\r\n                <p>{cvs.lastMessageId.message}</p>\r\n            </div>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Conversation;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components'\r\nimport useSocket from '../../hooks/useSocket';\r\nimport { addMessage } from '../../reducer/chat';\r\nimport { getConversations, setLastMessage } from '../../reducer/conversation';\r\nimport Conversation from './Conversation';\r\n\r\nconst Wrap = styled.div`\r\n    border: 1px solid black;\r\n`\r\n\r\nconst Sidebar = () => {\r\n    const { isLoading, conversations } = useSelector(state => state.conversations)\r\n    const dispatch = useDispatch()\r\n    const [ws, wsData] = useSocket()\r\n    useEffect(() => {\r\n        if (ws)\r\n            ws.addEventListener('message', ({ data }) => {\r\n\r\n                data = JSON.parse(data)\r\n                if (data.type === 'new-message') {\r\n                    dispatch(setLastMessage(data.payload.message))\r\n                    if (!data.payload.message.isMine)\r\n                        dispatch(addMessage(data.payload.message))\r\n                }\r\n            })\r\n    }, [ws, dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(getConversations())\r\n    }, [dispatch])\r\n    if (isLoading) return '...loading'\r\n    return (\r\n        <>\r\n            {/* Start of Sidebar */}\r\n            <div className=\"sidebar\" id=\"sidebar\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"tab-content\">\r\n\r\n                            {/* Start of Discussions */}\r\n                            <div id=\"discussions\" className=\"tab-pane fade active show\">\r\n                                {/* <div className=\"search\">\r\n                                    <form className=\"form-inline position-relative\">\r\n                                        <input type=\"search\" className=\"form-control\" id=\"conversations\" placeholder=\"Search for conversations...\" />\r\n                                        <button type=\"button\" className=\"btn btn-link loop\"><i className=\"material-icons\">search</i></button>\r\n                                    </form>\r\n                                    <button className=\"btn create\" data-toggle=\"modal\" data-target=\"#startnewchat\"><i className=\"material-icons\">create</i></button>\r\n                                </div> */}\r\n\r\n                                <div className=\"discussions\">\r\n                                    <h1>Discussions</h1>\r\n                                    <div className=\"list-group\" id=\"chats\" role=\"tablist\">\r\n                                        {conversations?.map(cvs => <Conversation key={cvs._id} cvs={cvs} />)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* End of Discussions */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* End of Sidebar */}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React, { useEffect, useRef, useState } from 'react';\r\nimport useSocket from '../../hooks/useSocket';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIncommingCall, setIsCallingToFalse } from '../../reducer/call'\r\n\r\nconst Wrap = styled.div`\r\n    position: fixed;\r\n    width: 390px;\r\n    height: 300px;\r\n    z-index: 9999999;\r\n    top: 100px;\r\n\r\n    right: 0;\r\n\r\n    background-color: aliceblue;\r\n    filter: white;\r\n    .hover__inner {\r\n        opacity: 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .call-end {\r\n        color: red;\r\n    }\r\n    .pick-up {\r\n        color: green;\r\n    }\r\n    :hover .hover__inner {\r\n        position: absolute;\r\n        width: 390px;\r\n        height: 300px;\r\n        z-index: 99999999;\r\n        opacity: 1;\r\n    }\r\n    .relative {\r\n        position: relative;\r\n    }\r\n\r\n    #local__video {\r\n        position: absolute;\r\n        width: 130px;\r\n        height: 100px;\r\n        /* border: 1px solid black; */\r\n        z-index: 99999990;\r\n    }\r\n    #remote__video {\r\n        position: absolute;\r\n        width: 390px;\r\n        height: 300px;\r\n        /* border: 1px solid black; */\r\n        /* z-index: 99999999; */\r\n    }\r\n`\r\n\r\nconst Call = () => {\r\n    const [ws, wsData] = useSocket()\r\n    const localVideoRef = useRef()\r\n    const remoteVideoRef = useRef()\r\n    const peerRTC = useRef(null)\r\n    const localStreamRef = useRef(null)\r\n    const { conversation, incommingCall, callAway } = useSelector(state => state.call)\r\n    const [acceptCall, setAcceptCall] = useState(true)\r\n    const dispatch = useDispatch()\r\n    const [audioEnabled, setAudioEnabled] = useState(true)\r\n    const [videoEnabled, setVideoEnabled] = useState(true)\r\n    const [innerVolumeChange, setInnerVolumeChange] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const handleSignaling = ({ data }) => {\r\n            try {\r\n                data = JSON.parse(data);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            switch (data.type) {\r\n                case \"offer\":\r\n                    handleOffer(data.payload.offer)\r\n                    break;\r\n                case \"answer\":\r\n                    handleAnswer(peerRTC.current, data.payload.answer);\r\n                    break;\r\n                //when a remote peer sends an ice candidate to us \r\n                case \"candidate\":\r\n                    handleCandidate(peerRTC.current, data.payload.candidate)\r\n                    break;\r\n                case \"leave\":\r\n                    handleLeave();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        if (ws) {\r\n\r\n            ws.addEventListener('message', handleSignaling)\r\n        }\r\n        return () => {\r\n            ws.removeEventListener('message', handleSignaling)\r\n        }\r\n    }, [ws])\r\n\r\n    // create localStream when isCalling\r\n    useEffect(() => {\r\n        const mediaInputConfig = { audio: true, video: true }\r\n        // function checkMedia(mediaInput) {\r\n        //     if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n        //         console.log(\"enumerateDevices() not supported.\");\r\n        //         return;\r\n        //     }\r\n\r\n        //     // List cameras and microphones.\r\n\r\n        //     navigator.mediaDevices.enumerateDevices()\r\n        //         .then(function (devices) {\r\n        //             devices.forEach(function (device) {\r\n        //                 console.log(device.kind + \": \" + device.label +\r\n        //                     \" id = \" + device.deviceId);\r\n        //                 if (device.kind === 'videoinput' && device.label && device.deviceId) {\r\n        //                     console.log(mediaInput)\r\n        //                     mediaInput.video = true\r\n        //                 }\r\n\r\n        //                 if (device.kind === 'audioinput' && device.label && device.deviceId) {\r\n        //                     mediaInput.audio = true\r\n        //                 }\r\n        //             });\r\n        //         })\r\n        //         .catch(function (err) {\r\n        //             console.log(err.name + \": \" + err.message);\r\n        //         });\r\n        //     console.log(mediaInput)\r\n        // }\r\n\r\n        // checkMedia(mediaInputConfig)\r\n\r\n        initLocalStream(mediaInputConfig)\r\n            .then(stream => {\r\n                localStreamRef.current = stream\r\n                if (localVideoRef.current)\r\n                    localVideoRef.current.srcObject = stream\r\n                else\r\n                    localStreamRef.current.getTracks().forEach(item => item.stop())\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    // make call\r\n    useEffect(() => {\r\n        if (callAway) {\r\n            console.log('make calll')\r\n            ws.send(wsData('make-call', { conversationId: conversation._id }))\r\n        }\r\n    }, [ws, wsData, callAway, conversation])\r\n\r\n    // clean up mediaStream\r\n    useEffect(() => () => {\r\n        if (localStreamRef.current) {\r\n            localStreamRef.current.getTracks().forEach(item => item.stop())\r\n        }\r\n        if (peerRTC.current) {\r\n            peerRTC.current.close()\r\n        }\r\n        // ws.send(wsData('leave', { conversationId: conversation._id }))\r\n    }, [])\r\n\r\n    function createRTCPeerCon() {\r\n        let connection = null\r\n\r\n        //using Google public stun server \r\n        var configuration = {\r\n            \"iceServers\": [{ \"url\": \"stun:stun2.1.google.com:19302\" }]\r\n        };\r\n\r\n        try {\r\n            connection = new RTCPeerConnection(configuration);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        connection.addStream(localStreamRef.current)\r\n\r\n        //when a remote user adds stream to the peer connection, we display it \r\n        connection.onaddstream = function (e) {\r\n            remoteVideoRef.current.srcObject = e.stream;\r\n        };\r\n\r\n        // Setup ice handling \r\n\r\n        connection.onicecandidate = (event) => {\r\n            console.log('candidate')\r\n            if (event.candidate) {\r\n                ws.send(wsData('candidate', { candidate: event.candidate, conversationId: conversation._id }))\r\n            }\r\n        }\r\n        return connection\r\n    }\r\n\r\n    const handleOffer = (offer) => {\r\n        peerRTC.current = createRTCPeerCon()\r\n        peerRTC.current.setRemoteDescription(new RTCSessionDescription(offer));\r\n        peerRTC.current.createAnswer(answer => {\r\n            peerRTC.current.setLocalDescription(answer)\r\n            ws.send(wsData('answer', { conversationId: conversation._id, answer }))\r\n        }, (err) => {\r\n            console.log(err)\r\n        });\r\n        console.log('handle offer end')\r\n    }\r\n\r\n    const handleAnswer = (connection, answer) => {\r\n        connection.setRemoteDescription(new RTCSessionDescription(answer))\r\n    }\r\n\r\n    const handleLeave = () => {\r\n        dispatch(setIsCallingToFalse())\r\n    }\r\n\r\n    const leaveCall = () => {\r\n        dispatch(setIsCallingToFalse())\r\n        ws.send(wsData('leave', { conversationId: conversation._id }))\r\n    }\r\n\r\n    const handleCandidate = (connection, candidate) => {\r\n        try {\r\n            console.log('add candidate')\r\n            connection.addIceCandidate(new RTCIceCandidate(candidate));\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    const handlePickup = async () => {\r\n        setAcceptCall(false)\r\n        peerRTC.current = createRTCPeerCon()\r\n        peerRTC.current.createOffer(function (offer) {\r\n            ws.send(wsData(\"offer\", { offer, conversationId: conversation._id }));\r\n            peerRTC.current.setLocalDescription(offer);\r\n        }, function (error) {\r\n            alert(\"Error when creating an offer\");\r\n        });\r\n    }\r\n\r\n    const initLocalStream = async ({ video, audio }) => {\r\n        return await navigator.mediaDevices.getUserMedia({ video, audio });\r\n    }\r\n\r\n    const handleMuteVideo = () => {\r\n        if (localStreamRef.current) {\r\n            localStreamRef.current.getVideoTracks().forEach(item => item.enabled = !videoEnabled)\r\n            setVideoEnabled(!videoEnabled)\r\n        }\r\n    }\r\n\r\n    const handleMuteAudio = () => {\r\n        if (localStreamRef.current) {\r\n            localStreamRef.current.getAudioTracks().forEach(item => item.enabled = !audioEnabled)\r\n            setAudioEnabled(!audioEnabled)\r\n        }\r\n    }\r\n\r\n    const handleVolume = (e) => {\r\n        if (remoteVideoRef.current) {\r\n            remoteVideoRef.current.volume = Number(e.target.value) / 100\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Wrap>\r\n            <video ref={localVideoRef} autoPlay={true} id='local__video' muted />\r\n            <video ref={remoteVideoRef} autoPlay={true} id='remote__video' />\r\n\r\n            <div className='hover__inner'>\r\n                {/* <div className=\"participant\">\r\n                    <img className=\"avatar-xxl\" src=\"dist/img/avatars/avatar-female-5.jpg\" alt=\"avatar\" />\r\n                    <span>Connecting</span>\r\n                </div> */}\r\n                <div className=\"options\">\r\n                    <button className=\"btn option\" onClick={handleMuteAudio}>\r\n                        {audioEnabled\r\n                            ? <i className=\"material-icons md-30\" >mic</i>\r\n                            : <i className=\"material-icons md-30\" >mic_off</i>\r\n                        }\r\n                    </button>\r\n                    <button className=\"btn option\" onClick={handleMuteVideo}>\r\n                        {videoEnabled\r\n                            ? <i className=\"material-icons md-30\" >videocam</i>\r\n                            : <i className=\"material-icons md-30\" >videocam_off</i>\r\n                        }\r\n                    </button>\r\n                    {incommingCall && acceptCall && <button className=\"btn pick-up\" onClick={handlePickup}><i className=\"material-icons md-30\" >call</i></button>}\r\n                    <button className=\"btn option call-end\" onClick={leaveCall}><i className=\"material-icons md-30\">call_end</i></button>\r\n                    {/* <button className=\"btn option\"><i className=\"material-icons md-30\">person_add</i></button> */}\r\n                    <button className=\"btn option relative\" >\r\n                        <i className=\"material-icons md-30\" onClick={() => setInnerVolumeChange(!innerVolumeChange)}>volume_up</i>\r\n                        {innerVolumeChange && <ModifyVolume setVolume={handleVolume} />}\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n        </Wrap>\r\n    );\r\n};\r\n\r\nconst VolumeWrap = styled.div`\r\n    position: absolute;\r\n    display: flex;\r\n    left: -50px;\r\n`\r\n\r\nconst ModifyVolume = ({ setVolume }) => {\r\n    return (\r\n        <VolumeWrap>\r\n            <i className=\"material-icons md-30\">volume_down</i>\r\n            <input type=\"range\" min=\"0\" max=\"100\" defaultValue=\"100\" id=\"myRange\" onChange={setVolume} />\r\n            <i className=\"material-icons md-30\">volume_up</i>\r\n        </VolumeWrap>\r\n    )\r\n}\r\n\r\nexport default Call;","import React, { useEffect, useRef, useState } from 'react';\r\nimport useSocket from '../../hooks/useSocket';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIncommingCall, setConversation, setIsCallingToFalse } from '../../reducer/call'\r\n\r\nimport CallModal from './CallModal'\r\n\r\nconst Call = () => {\r\n    const [ws, wsData] = useSocket()\r\n    const dispatch = useDispatch()\r\n    const testRef = useRef()\r\n    const { isCalling, conversation } = useSelector(state => state.call)\r\n    const { conversations } = useSelector(state => state.conversations)\r\n\r\n    useEffect(() => {\r\n        testRef.current = conversations\r\n    }, [conversations])\r\n\r\n    useEffect(() => {\r\n        if (ws) {\r\n            ws.addEventListener('message', ({ data }) => {\r\n                try {\r\n                    data = JSON.parse(data);\r\n                } catch (error) {\r\n                    data = data\r\n                }\r\n                if (data.type === \"incomming-call\") {\r\n                    let temp = testRef.current.find(item => item._id === data.payload.conversationId)\r\n                    dispatch(setConversation(temp))\r\n                    dispatch(setIncommingCall(true))\r\n                }\r\n            })\r\n        }\r\n    }, [ws])\r\n\r\n    if (!isCalling) return null\r\n    return (\r\n        <CallModal />\r\n    )\r\n}\r\n\r\nexport default Call","import React from 'react';\r\nimport Chat from '../components/chat/Chat';\r\nimport Sidebar from '../components/sidebar/Sidebar';\r\nimport Call from '../components/call/Call'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Sidebar />\r\n            <Chat />\r\n            <Call />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API\r\n\r\nexport const getMe = createAsyncThunk('me/getMe', async () => {\r\n\r\n    const { data: { data: user } } = await axios.get('/auth/me', { withCredentials: true })\r\n    return user\r\n})\r\n\r\nconst userSlice = createSlice({\r\n    name: 'me',\r\n    initialState: { me: null, loading: true },\r\n    extraReducers: {\r\n        [getMe.fulfilled]: (state, action) => {\r\n            state.loading = false\r\n            state.me = action.payload\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport default userSlice.reducer","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Auth from \"./components/auth/Auth\";\nimport WebSocketProvider from \"./context/Socket\";\nimport Home from \"./pages/Home\";\nimport { getMe } from \"./reducer/user\";\n\nfunction App() {\n  const { hasToken, } = useSelector(state => state.auth)\n  const { loading, me } = useSelector(state => state.me)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (hasToken) {\n      dispatch(getMe())\n    }\n  }, [dispatch, hasToken])\n  \n  if (loading && hasToken) return '...'\n  return (\n    <main>\n      <div className='layout'>\n        {\n          me ? <WebSocketProvider> <Home /></WebSocketProvider> : <Auth />\n        }\n      </div>\n    </main>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from '@reduxjs/toolkit'\r\n\r\nimport auth from './auth'\r\nimport conversations from './conversation'\r\nimport chat from './chat.js'\r\nimport me from './user.js'\r\nimport call from './call.js'\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    conversations,\r\n    chat,\r\n    me,\r\n    call,\r\n})","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport rootReducer from './reducer'\r\n\r\nexport default configureStore({ reducer: rootReducer })","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './css/swipe.min.css'\nimport './css/lib/bootstrap.min.css'\n\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}