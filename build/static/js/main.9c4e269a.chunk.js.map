{"version":3,"sources":["reducer/auth.js","components/auth/Signin.js","components/auth/Signup.js","components/auth/Auth.js","context/Socket.js","hooks/useSocket.js","reducer/chat.js","components/chat/InputtingMessage.js","components/chat/Message.js","reducer/call.js","components/chat/Chat.js","reducer/conversation.js","components/sidebar/Conversation.js","components/sidebar/Sidebar.js","components/call/Call.js","pages/Home.js","reducer/user.js","App.js","reportWebVitals.js","reducer/index.js","store.js","index.js"],"names":["axios","defaults","baseURL","process","signup","createAsyncThunk","payload","a","post","withCredentials","success","data","signin","authSlice","createSlice","name","initialState","loading","isAuth","hasToken","list","rc","document","cookie","split","forEach","parts","shift","trim","join","token","reducers","extraReducers","fulfilled","state","action","Signin","changeToSignup","dispatch","useDispatch","className","onSubmit","e","preventDefault","email","target","value","password","type","id","placeholder","required","href","onClick","Signup","changeToSignin","fullname","Auth","useState","authState","setAuthState","WebSocketContext","createContext","WebSocketProvider","children","conection","setConection","useEffect","socketConnection","WebSocket","error","console","log","Provider","useSocket","ws","useContext","undefined","Error","JSON","stringify","getChat","conversationId","get","messages","key","chatSlice","isLoading","chats","addMessage","push","actions","InputtingMessage","user","src","avatar","data-toggle","data-placement","title","alt","Message","message","date","Date","createdAt","isMine","senderId","getHours","getMinutes","callSlice","conversation","isCalling","incommingCall","callAway","setConversation","setIncommingCall","setCallAway","setIsCallingToFalse","Chat","styled","div","useSelector","chat","currentConversation","conversations","setMessage","currentTyping","setCurrentTyping","wsData","preMessage","useRef","messContentRef","chatRef","current","send","_id","addEventListener","parse","pre","filter","scrollTop","offsetHeight","handleSendMessage","toISOString","role","aria-labelledby","ref","map","ms","index","rows","onChange","onKeyDown","getConversations","conversationSlice","chooseConversation","find","cvs","setLastMessage","lastMessageId","months","Conversation","getDay","Sidebar","Wrap","Call","localVideoRef","remoteVideoRef","peerRTC","testRef","call","acceptCall","setAcceptCall","audioEnabled","setAudioEnabled","videoEnabled","setVideoEnabled","handleOffer","handleAnswer","answer","handleCandidate","candidate","handleLeave","connection","RTCPeerConnection","onaddstream","srcObject","stream","createRTCPeerCon","localStream","getTracks","item","stop","removeStream","close","handleInitWebRTC","video","audio","echoCancellation","then","onicecandidate","event","addStream","createOffer","offer","setLocalDescription","alert","navigator","mediaDevices","getUserMedia","setRemoteDescription","RTCSessionDescription","temp","addIceCandidate","RTCIceCandidate","autoPlay","muted","getAudioTracks","enabled","getVideoTracks","createAnswer","err","handleAcceptCall","Home","getMe","userSlice","me","App","auth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","configureStore","reducer","rootReducer","ReactDOM","render","store","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c4e269a.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API\r\n\r\n\r\nexport const signup = createAsyncThunk('auth/signup', async (payload) => {\r\n    const { data: { success } } = await axios.post('/auth/signup', payload, {\r\n        withCredentials: true,\r\n    })\r\n    return success\r\n})\r\n\r\nexport const signin = createAsyncThunk('auth/signin', async (payload) => {\r\n    const { data: { success } } = await axios.post('/auth/signin', payload, {\r\n        withCredentials: true,\r\n    })\r\n    return success\r\n})\r\n\r\nfunction hasToken() {\r\n    var list = {},\r\n        rc = document.cookie;\r\n\r\n    rc && rc.split(';').forEach(function (cookie) {\r\n        var parts = cookie.split('=');\r\n        list[parts.shift().trim()] = parts.join('=');\r\n    });\r\n\r\n    return !!list.token;\r\n}\r\n\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: { loading: true, isAuth: false, hasToken: hasToken() },\r\n    reducers: {\r\n\r\n    },\r\n    extraReducers: {\r\n        [signup.fulfilled]: (state, action) => {\r\n            state.loading = false\r\n            state.hasToken = action.payload\r\n        },\r\n        [signin.fulfilled]: (state, action) => {\r\n            state.loading = false\r\n            state.hasToken = action.payload\r\n        },\r\n\r\n    }\r\n})\r\n\r\nexport default authSlice.reducer","import { useDispatch } from 'react-redux';\r\nimport { signin } from '../../reducer/auth';\r\n\r\nconst Signin = ({ changeToSignup }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSignin = (e) => {\r\n        e.preventDefault()\r\n        dispatch(signin({\r\n            email:e.target.email.value,\r\n            password:e.target.password.value\r\n        }))\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"main order-md-1\">\r\n                <div className=\"start\">\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"content\">\r\n                                <h1>Sign in to Swipe</h1>\r\n                                {/* <div className=\"third-party\">\r\n                                    <button className=\"btn item bg-blue\">\r\n                                        <i className=\"material-icons\">pages</i>\r\n                                    </button>\r\n                                    <button className=\"btn item bg-teal\">\r\n                                        <i className=\"material-icons\">party_mode</i>\r\n                                    </button>\r\n                                    <button className=\"btn item bg-purple\">\r\n                                        <i className=\"material-icons\">whatshot</i>\r\n                                    </button>\r\n                                </div> */}\r\n                                <p>use your email account:</p>\r\n                                <form onSubmit={handleSignin}>\r\n                                    <div className=\"form-group\" >\r\n                                        <input type=\"email\" id=\"inputEmail\" className=\"form-control\" name='email' placeholder=\"Email Address\" required />\r\n                                        <button className=\"btn icon\"><i className=\"material-icons\">mail_outline</i></button>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"password\" id=\"inputPassword\" className=\"form-control\" name='password' placeholder=\"Password\" required />\r\n                                        <button className=\"btn icon\"><i className=\"material-icons\">lock_outline</i></button>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn button\">Sign In</button>\r\n                                    <div className=\"callout\">\r\n                                        <span>Don't have account? <a href=\"sign-up.html\">Create Account</a></span>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* End of Sign In */}\r\n            {/* Start of Sidebar */}\r\n            <div className=\"aside order-md-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"preference\">\r\n                            <h2>Hello, Friend!</h2>\r\n                            <p>Enter your personal details and start your journey with Swipe today.</p>\r\n                            <button onClick={changeToSignup} className=\"btn button\">Sign Up</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signin","import { useDispatch } from 'react-redux';\r\nimport { signup } from '../../reducer/auth';\r\n\r\nconst Signup = ({ changeToSignin }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const handleSignup = (e) => {\r\n        e.preventDefault()\r\n        dispatch(signup({\r\n            email: e.target.email.value,\r\n            password: e.target.password.value,\r\n            fullname: e.target.fullname.value\r\n        }))\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"main order-md-2\">\r\n                <div className=\"start\">\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"content\">\r\n                                <h1>Create Account</h1>\r\n                                {/* <div className=\"third-party\">\r\n                                    <button className=\"btn item bg-blue\">\r\n                                        <i className=\"material-icons\">pages</i>\r\n                                    </button>\r\n                                    <button className=\"btn item bg-teal\">\r\n                                        <i className=\"material-icons\">party_mode</i>\r\n                                    </button>\r\n                                    <button className=\"btn item bg-purple\">\r\n                                        <i className=\"material-icons\">whatshot</i>\r\n                                    </button>\r\n                                </div> */}\r\n                                <p>use your email for registration:</p>\r\n                                <form className=\"signup\" onSubmit={handleSignup}>\r\n                                    <div className=\"form-parent\">\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"text\" id=\"inputName\" className=\"form-control\" name='fullname' placeholder=\"Username\" required />\r\n                                            <button className=\"btn icon\"><i className=\"material-icons\">person_outline</i></button>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"email\" id=\"inputEmail\" className=\"form-control\" name='email' placeholder=\"Email Address\" required />\r\n                                            <button className=\"btn icon\"><i className=\"material-icons\">mail_outline</i></button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"password\" id=\"inputPassword\" className=\"form-control\" name='password' placeholder=\"Password\" required />\r\n                                        <button className=\"btn icon\"><i className=\"material-icons\">lock_outline</i></button>\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn button\" >Sign Up</button>\r\n                                    <div className=\"callout\">\r\n                                        <span>Already a member? <a href=\"sign-in.html\">Sign In</a></span>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* End of Sign Up */}\r\n            {/* Start of Sidebar */}\r\n            <div className=\"aside order-md-1\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"preference\">\r\n                            <h2>Welcome Back!</h2>\r\n                            <p>To keep connected with your friends please login with your personal info.</p>\r\n                            <button onClick={changeToSignin} className=\"btn button\">Sign In</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signup","import React, { useState } from 'react';\r\nimport Signin from './Signin';\r\nimport Signup from './Signup';\r\n\r\nconst Auth = () => {\r\n\r\n    const [authState, setAuthState] = useState('signin')\r\n\r\n    return (\r\n        <>\r\n            {authState === 'signin'\r\n                ? <Signin changeToSignup={() => setAuthState('signup')} />\r\n                : <Signup changeToSignin={() => setAuthState('signin')} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const WebSocketContext = createContext(null)\r\n\r\nconst WebSocketProvider = ({ children }) => {\r\n    const [conection, setConection] = useState(null)\r\n    useEffect(() => {\r\n        try {\r\n            const socketConnection = new WebSocket(process.env.REACT_APP_WS)\r\n\r\n            setConection(socketConnection)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [])\r\n    return (\r\n        <WebSocketContext.Provider value={conection}>\r\n            {children}\r\n        </WebSocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport default WebSocketProvider;","import { useCallback, useContext } from 'react';\r\n\r\nimport { WebSocketContext } from '../context/Socket';\r\n\r\nconst useSocket = () => {\r\n    const ws = useContext(WebSocketContext)\r\n    // const wsData = useCallback((type, payload) => {\r\n    //     return JSON.stringify({ type, payload })\r\n    // }, [])\r\n    function wsData(type, payload) {\r\n        return JSON.stringify({ type, payload })\r\n    }\r\n    if (ws === undefined)\r\n        throw new Error('faillllllllllllll websocket')\r\n    return [ws, wsData]\r\n};\r\n\r\nexport default useSocket;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API\r\n\r\nexport const getChat = createAsyncThunk('chat/messages', async (conversationId) => {\r\n    const { data: { messages } } = await axios.get(`/conversation/${conversationId}/message`, { withCredentials: true })\r\n    console.log(messages)\r\n    return { key: conversationId, value: messages }\r\n})\r\n\r\nconst chatSlice = createSlice({\r\n    name: 'chat',\r\n    initialState: { isLoading: true, chats: {} },\r\n    reducers: {\r\n        addMessage(state, action) {\r\n            state.chats[action.payload.conversationId]?.push(action.payload)\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getChat.fulfilled]: (state, action) => {\r\n            state.isLoading = false\r\n            state.chats[action.payload.key] = action.payload.value\r\n        },\r\n    }\r\n})\r\n\r\nexport const { addMessage } = chatSlice.actions\r\n\r\nexport default chatSlice.reducer","import React from 'react';\r\n\r\nconst InputtingMessage = ({ user }) => {\r\n    return (\r\n        <div className=\"message\">\r\n            <img className=\"avatar-md\" src={user.avatar} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Keith\" alt=\"avatar\" />\r\n            <div className=\"text-main\">\r\n                <div className=\"text-group\">\r\n                    <div className=\"text typing\">\r\n                        <div className=\"wave\">\r\n                            <span className=\"dot\" />\r\n                            <span className=\"dot\" />\r\n                            <span className=\"dot\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputtingMessage;","import React from 'react';\r\n\r\nconst Message = ({ message }) => {\r\n    let date = new Date(message.createdAt)\r\n    return (\r\n        <div className={`message ${message.isMine ? 'me' : ''}`}>\r\n            {!message.isMine ?\r\n                <img className=\"avatar-md\" src={message.senderId.avatar} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Keith\" alt=\"avatar\" />\r\n                : ''\r\n            }\r\n            <div className=\"text-main\">\r\n                <div className={`text-group ${message.isMine ? 'me' : ''}`}>\r\n                    <div className={`text ${message.isMine ? 'me' : ''}`}>\r\n                        <p>{message.message}</p>\r\n                    </div>\r\n                </div>\r\n                <span>\r\n                    {/* <i className=\"material-icons\">check</i> */}\r\n                    {`${date.getHours()}:${date.getMinutes()}`}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nconst callSlice = createSlice({\r\n    name: 'call',\r\n    initialState: { conversation: null, isCalling: false, incommingCall: false, callAway: false },\r\n    reducers: {\r\n        setConversation(state, action) {\r\n            state.conversation = action.payload\r\n            state.isCalling = true\r\n        },\r\n        setIncommingCall(state, action) {\r\n            state.incommingCall = action.payload\r\n            state.isCalling = true\r\n        },\r\n        setCallAway(state, action) {\r\n            state.callAway = action.payload\r\n        },\r\n        setIsCallingToFalse(state, payload) {\r\n            state.isCalling = state.incommingCall = state.callAway = false\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setConversation, setIncommingCall, setCallAway, setIsCallingToFalse } = callSlice.actions\r\n\r\nexport default callSlice.reducer","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport useSocket from '../../hooks/useSocket';\r\nimport { addMessage, getChat } from '../../reducer/chat';\r\nimport InputtingMessage from './InputtingMessage';\r\nimport Message from './Message';\r\nimport { setCallAway, setConversation } from '../../reducer/call.js';\r\n\r\n\r\nconst Wrap = styled.div`\r\n    position: fixed;\r\n    /* width: 200px;\r\n    height: 200px; */\r\n    z-index:9999999;\r\n    background:linear-gradient(145deg,rgba(140,167,255,1) 0,rgba(139,84,249,1) 50%,rgba(131,33,243,1) 100%);\r\n`\r\n\r\nconst Chat = () => {\r\n    const { isLoading, chats } = useSelector(state => state.chat)\r\n    const { currentConversation } = useSelector(state => state.conversations)\r\n    const [message, setMessage] = useState('')\r\n    const [currentTyping, setCurrentTyping] = useState([])\r\n    const [calling, setCalling] = useState(false)\r\n    const [inCommingCall, setIncommingCall] = useState(false)\r\n    const [ws, wsData] = useSocket()\r\n    const dispatch = useDispatch()\r\n    const preMessage = useRef('')\r\n    const messContentRef = useRef()\r\n    const chatRef = useRef()\r\n    console.log(currentTyping)\r\n\r\n    // useEffect(()=> {\r\n\r\n    // },[])\r\n\r\n    useEffect(() => {\r\n\r\n        if (preMessage.current === '' && message !== '') {\r\n            ws.send(wsData('start-typing', { conversationId: currentConversation._id }))\r\n        }\r\n\r\n        if (message === '' && preMessage.current !== '') {\r\n            ws.send(wsData('end-typing', { conversationId: currentConversation._id }))\r\n        }\r\n\r\n        if (preMessage.current !== message)\r\n            preMessage.current = message\r\n\r\n    }, [currentConversation._id, message, ws, wsData])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (message) {\r\n                setMessage('')\r\n                if (ws)\r\n                    ws.send(wsData('end-typing', { conversationId: currentConversation._id }))\r\n            }\r\n        }\r\n    }, [currentConversation._id])\r\n\r\n    useEffect(() => {\r\n        if (ws)\r\n            ws.addEventListener('message', ({ data }) => {\r\n                console.log(data)\r\n                data = JSON.parse(data)\r\n                if (data.conversationId === currentConversation._id)\r\n                    switch (data.type) {\r\n                        case 'start-typing':\r\n                            setCurrentTyping(pre => {\r\n                                return [...pre, data.payload.user]\r\n                            })\r\n                            break\r\n                        case 'end-typing':\r\n                            setCurrentTyping(pre => {\r\n                                return pre.filter(user => user._id !== data.payload.user._id)\r\n                            })\r\n                            break\r\n                        // case 'new-message':\r\n                        //     if (messContentRef.current && data.payload.conversationId === currentConversation._id) {\r\n                        //         messContentRef.current.scrollTop = 9999 || chatRef.current.offsetHeight\r\n                        //     }\r\n                        //     break\r\n                        default:\r\n                            return\r\n                    }\r\n            })\r\n    }, [ws, currentConversation._id])\r\n\r\n    useEffect(() => {\r\n        if (messContentRef.current) {\r\n            messContentRef.current.scrollTop = chatRef.current.offsetHeight\r\n            console.log('scorll bottom')\r\n        }\r\n    }, [chats])\r\n\r\n    useEffect(() => {\r\n        if (!chats[currentConversation._id] && currentConversation._id) {\r\n            dispatch(getChat(currentConversation._id))\r\n            console.log('get messages')\r\n        }\r\n    }, [chats, currentConversation._id, dispatch])\r\n\r\n    // console.log(chats[currentConversation._id])\r\n\r\n    const handleSendMessage = (e) => {\r\n        if (!message.trim()) return\r\n        setMessage('')\r\n        const payload = {\r\n            type: 'text',\r\n            message,\r\n            conversationId: currentConversation._id,\r\n            createdAt: (new Date()).toISOString(),\r\n        }\r\n        ws.send(wsData('new-message', payload))\r\n        payload.isMine = true\r\n        dispatch(addMessage(payload))\r\n\r\n    }\r\n\r\n    const handleMakeCall = () => {\r\n        dispatch(setCallAway(true))\r\n        dispatch(setConversation(currentConversation))\r\n    }\r\n\r\n    if (!chats[currentConversation._id] || isLoading) return null\r\n\r\n    return (\r\n        <>\r\n            {/* {calling && <Call setCalling={setCalling} video audio={false} callAway conversationId={currentConversation._id} />} */}\r\n            <div className=\"main\">\r\n                <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                    {/* Start of Babble */}\r\n                    <div className=\"babble tab-pane fade active show\" id=\"list-chat\" role=\"tabpanel\" aria-labelledby=\"list-chat-list\">\r\n                        {/* Start of Chat */}\r\n                        <div className=\"chat\" id=\"chat1\">\r\n                            <div className=\"top\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"inside\">\r\n                                            <a href=\"/\" onClick={e => e.preventDefault()}><img className=\"avatar-md\" src={currentConversation.avatar} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Keith\" alt=\"avatar\" /></a>\r\n                                            <div className=\"status\">\r\n                                                <i className=\"material-icons online\">fiber_manual_record</i>\r\n                                            </div>\r\n                                            <div className=\"data\">\r\n                                                <h5><a href=\"/\" onClick={e => e.preventDefault()}>{currentConversation.title}</a></h5>\r\n                                                <span>Active now</span>\r\n                                            </div>\r\n                                            <button className=\"btn connect d-md-block d-none\" name={1}><i className=\"material-icons md-30\">phone_in_talk</i></button>\r\n                                            <button className=\"btn connect d-md-block d-none\" name={1} onClick={handleMakeCall}><i className=\"material-icons md-36\">videocam</i></button>\r\n                                            <button className=\"btn d-md-block d-none\"><i className=\"material-icons md-30\">info</i></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div ref={messContentRef} className=\"content\" id=\"content\">\r\n                                <div ref={chatRef} className=\"container\">\r\n                                    <div className=\"col-md-12\">\r\n                                        {chats[currentConversation._id]?.map((ms, index) => <Message key={ms._id || index} message={ms} />)}\r\n                                        {currentTyping?.map((user, index) => <InputtingMessage user={user} key={index} />)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"bottom\">\r\n                                        <form className=\"position-relative w-100\" >\r\n                                            <textarea\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Start typing for reply...\"\r\n                                                rows={1}\r\n                                                value={message}\r\n                                                onChange={e => setMessage(e.target.value)}\r\n                                                onKeyDown={e => {\r\n                                                    if (e.key === 'Enter') {\r\n                                                        e.preventDefault()\r\n                                                        handleSendMessage()\r\n                                                    }\r\n                                                    else return\r\n                                                }}\r\n                                            />\r\n                                            <button className=\"btn emoticons\"><i className=\"material-icons\">insert_emoticon</i></button>\r\n                                            <button type=\"button\" className=\"btn send\" onClick={handleSendMessage}><i className=\"material-icons\">send</i></button>\r\n                                        </form>\r\n                                        {/* <label>\r\n                                            <input type=\"file\" />\r\n                                            <span className=\"btn attach d-sm-block d-none\"><i className=\"material-icons\">attach_file</i></span>\r\n                                        </label> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* End of Chat */}\r\n                        {/* start call */}\r\n\r\n                        {/* end call */}\r\n                    </div>\r\n                    {/* End of Babble */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Chat;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API\r\nexport const getConversations = createAsyncThunk('conversations/list', async () => {\r\n    const { data: { conversations } } = await axios.get('/conversation', {\r\n        withCredentials: true,\r\n    })\r\n    return conversations\r\n})\r\n\r\nconst conversationSlice = createSlice({\r\n    name: 'conversations',\r\n    initialState: { isLoading: true, currentConversation: '', conversations: [] },\r\n    reducers: {\r\n        chooseConversation(state, action) {\r\n            state.currentConversation = state.conversations.find(cvs => cvs._id === action.payload)\r\n        },\r\n        setLastMessage(state, action) {\r\n            state.conversations.forEach(cvs => {\r\n                if (cvs._id === action.payload.conversationId)\r\n                    cvs.lastMessageId = action.payload\r\n            })\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getConversations.fulfilled]: (state, action) => {\r\n            state.isLoading = false\r\n            state.conversations = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const { chooseConversation, setLastMessage } = conversationSlice.actions\r\n\r\nexport default conversationSlice.reducer","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Avatar } from 'antd'\r\nimport { useDispatch } from 'react-redux';\r\nimport { chooseConversation } from '../../reducer/conversation';\r\nimport { getChat } from '../../reducer/chat';\r\n\r\nconst Wrap = styled.div`\r\n    height: 80px;\r\n    width:100%;\r\n`\r\nconst months = ['Mon', 'Tue', 'Wed', 'Thurs', 'Fri', 'Sat', 'Sun']\r\n\r\nconst Conversation = ({ cvs }) => {\r\n    console.log(typeof cvs.lastMessageId.createdAt)\r\n    const dispatch = useDispatch()\r\n    const chooseCurrentConversation = (e) => {\r\n        e.preventDefault()\r\n        dispatch(getChat(cvs._id))\r\n        dispatch(chooseConversation(cvs._id))\r\n    }\r\n    return (\r\n        <a onClick={chooseCurrentConversation} href=\"#list-chat\" className=\"filterDiscussions all unread single active\" id=\"list-chat-list\" data-toggle=\"list\" role=\"tab\">\r\n            <img className=\"avatar-md\" src={cvs.avatar} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Janette\" alt=\"avatar\" />\r\n            <div className=\"status\">\r\n                <i className=\"material-icons online\">fiber_manual_record</i>\r\n            </div>\r\n            {/* <div className=\"new bg-yellow\">\r\n                <span>+7</span>\r\n            </div> */}\r\n            <div className=\"data\">\r\n                <h5>{cvs.title}</h5>\r\n                <span>{months[(new Date(cvs.lastMessageId.createdAt)).getDay()]}</span>\r\n                <p>{cvs.lastMessageId.message}</p>\r\n            </div>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Conversation;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components'\r\nimport useSocket from '../../hooks/useSocket';\r\nimport { addMessage } from '../../reducer/chat';\r\nimport { getConversations, setLastMessage } from '../../reducer/conversation';\r\nimport Conversation from './Conversation';\r\n\r\nconst Wrap = styled.div`\r\n    border: 1px solid black;\r\n`\r\n\r\nconst Sidebar = () => {\r\n    const { isLoading, conversations } = useSelector(state => state.conversations)\r\n    const dispatch = useDispatch()\r\n    const [ws, wsData] = useSocket()\r\n    console.log(conversations)\r\n    useEffect(() => {\r\n        if (ws)\r\n            ws.addEventListener('message', ({ data }) => {\r\n\r\n                data = JSON.parse(data)\r\n                if (data.type === 'new-message') {\r\n                    dispatch(setLastMessage(data.payload.message))\r\n                    if (!data.payload.message.isMine)\r\n                        dispatch(addMessage(data.payload.message))\r\n                }\r\n            })\r\n    }, [ws, dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(getConversations())\r\n        console.log('dispatch')\r\n    }, [dispatch])\r\n    if (isLoading) return '...loading'\r\n    return (\r\n        <>\r\n            {/* Start of Sidebar */}\r\n            <div className=\"sidebar\" id=\"sidebar\">\r\n                <div className=\"container\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"tab-content\">\r\n\r\n                            {/* Start of Discussions */}\r\n                            <div id=\"discussions\" className=\"tab-pane fade active show\">\r\n                                {/* <div className=\"search\">\r\n                                    <form className=\"form-inline position-relative\">\r\n                                        <input type=\"search\" className=\"form-control\" id=\"conversations\" placeholder=\"Search for conversations...\" />\r\n                                        <button type=\"button\" className=\"btn btn-link loop\"><i className=\"material-icons\">search</i></button>\r\n                                    </form>\r\n                                    <button className=\"btn create\" data-toggle=\"modal\" data-target=\"#startnewchat\"><i className=\"material-icons\">create</i></button>\r\n                                </div> */}\r\n\r\n                                <div className=\"discussions\">\r\n                                    <h1>Discussions</h1>\r\n                                    <div className=\"list-group\" id=\"chats\" role=\"tablist\">\r\n                                        {conversations?.map(cvs => <Conversation key={cvs._id} cvs={cvs} />)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* End of Discussions */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* End of Sidebar */}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React, { useEffect, useRef, useState } from 'react';\r\nimport useSocket from '../../hooks/useSocket';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setIncommingCall, setConversation, setIsCallingToFalse } from '../../reducer/call'\r\n\r\nconst Wrap = styled.div`\r\n    position: fixed;\r\n    width: 390px;\r\n    height: 300px;\r\n    z-index: 9999999;\r\n    top: 100px;\r\n\r\n    right: 0;\r\n\r\n    background-color: aliceblue;\r\n    filter: white;\r\n    .hover__inner {\r\n        opacity: 0;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .call-end {\r\n        color: red;\r\n    }\r\n    .pick-up {\r\n        color: green;\r\n    }\r\n    :hover .hover__inner {\r\n        position: absolute;\r\n        width: 390px;\r\n        height: 300px;\r\n        z-index: 99999999;\r\n        opacity: 1;\r\n    }\r\n    #local__video {\r\n        position: absolute;\r\n        width: 130px;\r\n        height: 100px;\r\n        /* border: 1px solid black; */\r\n        z-index: 99999990;\r\n    }\r\n    #remote__video {\r\n        position: absolute;\r\n        width: 390px;\r\n        height: 300px;\r\n        /* border: 1px solid black; */\r\n        /* z-index: 99999999; */\r\n    }\r\n`\r\n\r\nconst Call = () => {\r\n    const [ws, wsData] = useSocket()\r\n    const localVideoRef = useRef()\r\n    const remoteVideoRef = useRef()\r\n    const peerRTC = useRef(null)\r\n    const { conversations } = useSelector(state => state.conversations)\r\n    const testRef = useRef(null)\r\n    const streamRef = useRef(null)\r\n    const { conversation, incommingCall, callAway, isCalling } = useSelector(state => state.call)\r\n    const [acceptCall, setAcceptCall] = useState(true)\r\n    const dispatch = useDispatch()\r\n    const [audioEnabled, setAudioEnabled] = useState(true)\r\n    const [videoEnabled, setVideoEnabled] = useState(true)\r\n\r\n    console.log(conversations)\r\n\r\n    useEffect(() => {\r\n        testRef.current = conversations\r\n    }, [conversations])\r\n\r\n    useEffect(() => {\r\n        if (ws) {\r\n            ws.addEventListener('message', ({ data }) => {\r\n                try {\r\n                    data = JSON.parse(data);\r\n\r\n                } catch (error) {\r\n                    data = data\r\n\r\n                }\r\n                console.log(data)\r\n                switch (data.type) {\r\n                    case \"offer\":\r\n                        handleOffer(peerRTC.current, data.payload)\r\n                        break;\r\n                    case \"answer\":\r\n                        handleAnswer(peerRTC.current, data.payload.answer);\r\n                        break;\r\n                    //when a remote peer sends an ice candidate to us \r\n                    case \"candidate\":\r\n                        handleCandidate(peerRTC.current, data.payload.candidate)\r\n                        break;\r\n                    case \"leave\":\r\n                        handleLeave();\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            })\r\n        }\r\n    }, [ws])\r\n    useEffect(() => {\r\n        // create peerRTCCOn\r\n        function createRTCPeerCon() {\r\n            let connection = null\r\n\r\n            //using Google public stun server \r\n            var configuration = {\r\n                \"iceServers\": [{ \"url\": \"stun:stun2.1.google.com:19302\" }]\r\n            };\r\n\r\n            try {\r\n                connection = new RTCPeerConnection(configuration);\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            // setup stream listening \r\n            // connection.addStream(stream);\r\n\r\n            //when a remote user adds stream to the peer connection, we display it \r\n            connection.onaddstream = function (e) {\r\n                remoteVideoRef.current.srcObject = e.stream;\r\n            };\r\n\r\n            // Setup ice handling \r\n\r\n            return connection\r\n        }\r\n        if (!peerRTC.current && ws) {\r\n            console.log('create Peer')\r\n            peerRTC.current = createRTCPeerCon()\r\n        }\r\n    }, [ws, wsData, isCalling])\r\n\r\n    useEffect(() => {\r\n        let localStream = localVideoRef.current\r\n        // let remoteVideo = remoteVideoRef.current\r\n\r\n        return () => {\r\n            // close allTrackMedia\r\n            console.log('logg')\r\n            if (isCalling) {\r\n                console.log('remove stream')\r\n                if (localStream.srcObject) {\r\n                    localStream.srcObject.getTracks().forEach(item => item.stop())\r\n                    peerRTC.current.removeStream(localStream.srcObject)\r\n                    console.log('off stream')\r\n                }\r\n                // if (remoteVideo.srcObject) {\r\n                //     remoteVideo.srcObject.getTracks().forEach(item => item.stop())\r\n                //     peerRTC.current.removeStream(remoteVideo.srcObject)\r\n                // }\r\n                peerRTC.current.close()\r\n\r\n                // init state for newCall\r\n                setAcceptCall(true)\r\n                peerRTC.current = null\r\n            }\r\n\r\n        }\r\n    }, [isCalling])\r\n\r\n    const createOffer = (connection) => {\r\n        if (localVideoRef.current) {\r\n            connection.addStream(localVideoRef.current.srcObject)\r\n            connection.createOffer(function (offer) {\r\n                ws.send(wsData(\"offer\", { offer, conversationId: conversation._id }));\r\n                connection.setLocalDescription(offer);\r\n            }, function (error) {\r\n                alert(\"Error when creating an offer\");\r\n            });\r\n        }\r\n    }\r\n\r\n    // clear \r\n    // useEffect(() => () => {\r\n    //     if (streamRef.current && !isCalling) {\r\n\r\n    //         streamRef.current.getTracks().forEach(item => item.stop())\r\n    //         peerRTC.current.removeStream(streamRef.current)\r\n    //         console.log('off stream')\r\n\r\n    //     }\r\n    //     console.log('cleannnnnnnnnnnnnnnnn')\r\n    // })\r\n    // init mediaStream if call away\r\n    useEffect(() => {\r\n        if (callAway) {\r\n            handleInitWebRTC({ video: true, audio: { echoCancellation: true } }).then((stream) => {\r\n                // stream.echoCancellation = true\r\n                // streamRef.current = stream\r\n\r\n                if (localVideoRef.current)\r\n                    localVideoRef.current.srcObject = stream\r\n                peerRTC.current.onicecandidate = function (event) {\r\n                    console.log('candidate')\r\n                    if (event.candidate) {\r\n                        ws.send(wsData('candidate', { candidate: event.candidate, conversationId: conversation._id }))\r\n                    }\r\n                };\r\n                createOffer(peerRTC.current)\r\n            })\r\n\r\n        }\r\n    }, [callAway])\r\n\r\n    const handleInitWebRTC = async ({ video, audio }) => {\r\n        return await navigator.mediaDevices.getUserMedia({ video, audio });\r\n    }\r\n\r\n    const handleOffer = (connection, data) => {\r\n        connection.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n        dispatch(setIncommingCall(true))\r\n        console.log(conversations)\r\n        let temp = testRef.current.find(item => item._id === data.conversationId)\r\n        console.log(temp)\r\n        dispatch(setConversation(temp))\r\n        console.log('handle offer end')\r\n    }\r\n\r\n    const handleAcceptCall = (connection) => {\r\n        try {\r\n            connection.onicecandidate = function (event) {\r\n                console.log('candidate')\r\n                if (event.candidate) {\r\n                    ws.send(wsData('candidate', { candidate: event.candidate, conversationId: conversation._id }))\r\n                }\r\n            };\r\n            console.log(connection)\r\n            connection.createAnswer(answer => {\r\n                console.log(answer)\r\n                connection.setLocalDescription(answer)\r\n\r\n                ws.send(wsData('answer', { conversationId: conversation._id, answer }))\r\n            }, (err) => { console.log(err) });\r\n\r\n        } catch (error) {\r\n            // handle error here\r\n            console.log(error);\r\n        }\r\n\r\n\r\n    }\r\n    const handleAnswer = (connection, answer) => {\r\n        connection.setRemoteDescription(new RTCSessionDescription(answer))\r\n    }\r\n    const handleLeave = () => {\r\n        dispatch(setIsCallingToFalse())\r\n    }\r\n\r\n    const leaveCall = () => {\r\n        dispatch(setIsCallingToFalse())\r\n        ws.send(wsData('leave', { conversationId: conversation._id }))\r\n    }\r\n    const handleCandidate = (connection, candidate) => {\r\n        try {\r\n            console.log(connection)\r\n            connection.addIceCandidate(new RTCIceCandidate(candidate));\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    const handlePickUp = () => {\r\n        if (incommingCall) {\r\n            setAcceptCall(false)\r\n            console.log('pickup')\r\n            //init mediaStream\r\n            handleInitWebRTC({ video: true, audio: { echoCancellation: true } }).then(stream => {\r\n                stream.echoCancellation = true\r\n                localVideoRef.current.srcObject = stream\r\n                peerRTC.current.addStream(stream)\r\n                handleAcceptCall(peerRTC.current)\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleMuteVideo = () => {\r\n        if (localVideoRef.current.srcObject) {\r\n            localVideoRef.current.srcObject.getVideoTracks().forEach(item => item.enabled = !videoEnabled)\r\n            setVideoEnabled(!videoEnabled)\r\n        }\r\n    }\r\n\r\n    const handleMuteAudio = () => {\r\n        if (localVideoRef.current.srcObject) {\r\n            localVideoRef.current.srcObject.getAudioTracks().forEach(item => item.enabled = !audioEnabled)\r\n            setAudioEnabled(!audioEnabled)\r\n        }\r\n    }\r\n\r\n    if (!isCalling) return null\r\n\r\n    return (\r\n        <Wrap>\r\n            <video ref={localVideoRef} autoPlay={true} id='local__video' muted />\r\n            <video ref={remoteVideoRef} autoPlay={true} id='remote__video' />\r\n\r\n            <div className='hover__inner'>\r\n                {/* <div className=\"participant\">\r\n                    <img className=\"avatar-xxl\" src=\"dist/img/avatars/avatar-female-5.jpg\" alt=\"avatar\" />\r\n                    <span>Connecting</span>\r\n                </div> */}\r\n                <div className=\"options\">\r\n                    <button className=\"btn option\"><i className=\"material-icons md-30\" onClick={handleMuteAudio}>mic</i></button>\r\n                    <button className=\"btn option\"><i className=\"material-icons md-30\" onClick={handleMuteVideo}>videocam</i></button>\r\n                    {incommingCall && acceptCall && <button className=\"btn pick-up\"><i className=\"material-icons md-30\" onClick={handlePickUp}>call</i></button>}\r\n                    <button className=\"btn option call-end\" onClick={leaveCall}><i className=\"material-icons md-30\">call_end</i></button>\r\n                    {/* <button className=\"btn option\"><i className=\"material-icons md-30\">person_add</i></button>\r\n                    <button className=\"btn option\"><i className=\"material-icons md-30\">volume_up</i></button> */}\r\n                </div>\r\n                {/* <button className=\"btn back\" name={1}><i className=\"material-icons md-24\">chat</i></button> */}\r\n            </div>\r\n        </Wrap>\r\n    );\r\n};\r\n\r\nexport default Call;","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport Chat from '../components/chat/Chat';\r\nimport Sidebar from '../components/sidebar/Sidebar';\r\n\r\nimport Call from '../components/call/Call.js'\r\nimport useSocket from '../hooks/useSocket';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst Wrap = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 200px 1fr;\r\n    height: 100vh;\r\n`\r\n\r\nconst Home = () => {\r\n    const [calling, setCalling] = useState(false)\r\n    const [ws] = useSocket()\r\n    const [offer, setOffer] = useState(null)\r\n    const [conversationId, setConversationId] = useState(null)\r\n    const { conversation } = useSelector(state => state.call)\r\n    const dispatch = useDispatch()\r\n\r\n    // useEffect(() => {\r\n    //     if (ws) {\r\n    //         ws.addEventListener('message', ({ data }) => {\r\n    //             console.log(data)\r\n    //             data = JSON.parse(data)\r\n    //             if (data.type === 'offer') {\r\n\r\n\r\n    //                 setConversationId(data.payload.conversationId)\r\n    //                 setOffer(data.payload.offer)\r\n    //                 setCalling(true)\r\n\r\n    //             }\r\n    //         })\r\n    //     }\r\n    // }, [ws])\r\n\r\n    return (\r\n        <>\r\n            <Sidebar />\r\n            <Chat />\r\n            <Call />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API\r\n\r\nexport const getMe = createAsyncThunk('me/getMe', async () => {\r\n\r\n    const { data: { data: user } } = await axios.get('/auth/me', { withCredentials: true })\r\n    return user\r\n})\r\n\r\nconst userSlice = createSlice({\r\n    name: 'me',\r\n    initialState: { me: null, loading: true },\r\n    extraReducers: {\r\n        [getMe.fulfilled]: (state, action) => {\r\n            state.loading = false\r\n            state.me = action.payload\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport default userSlice.reducer","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Auth from \"./components/auth/Auth\";\r\nimport WebSocketProvider from \"./context/Socket\";\r\nimport Home from \"./pages/Home\";\r\nimport { getMe } from \"./reducer/user\";\r\n\r\nfunction App() {\r\n  const { hasToken, } = useSelector(state => state.auth)\r\n  const { loading, me } = useSelector(state => state.me)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (hasToken) {\r\n      dispatch(getMe())\r\n    }\r\n  }, [dispatch, hasToken])\r\n  console.log(me)\r\n  if (loading && hasToken) return '...'\r\n  return (\r\n    <main>\r\n      <div className='layout'>\r\n        {\r\n          me ? <WebSocketProvider> <Home /></WebSocketProvider> : <Auth />\r\n        }\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\n\r\nimport auth from './auth'\r\nimport conversations from './conversation'\r\nimport chat from './chat.js'\r\nimport me from './user.js'\r\nimport call from './call.js'\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    conversations,\r\n    chat,\r\n    me,\r\n    call,\r\n})","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport rootReducer from './reducer'\r\n\r\nexport default configureStore({ reducer: rootReducer })","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.css';\r\nimport './css/swipe.min.css'\r\nimport './css/lib/bootstrap.min.css'\r\n\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}